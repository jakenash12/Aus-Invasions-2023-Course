#remove the one row with tree name "ER"...not sure what this row is??
OL <- OL[c(1:18),]
all_lit <- leaf.euc %>%
full_join(leaf.pine, by = "ID") %>%
full_join(bark, by = "ID") %>%
full_join(OL, by = "ID")
all_lit <- leaf.euc %>%
full_join(leaf.pine, by = "treeName") %>%
full_join(bark, by = "treeName") %>%
full_join(OL, by = "treeName")
View(all_lit)
# Create new dataframes by litter type
leaf.pine <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Pine")
leaf.euc <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Euc")
bark <- subset(all_lit, all_lit$litter_type %like% "Bark")
OL <- subset(all_lit, all_lit$litter_type %like% "Organic layer")
View(leaf.euc)
View(leaf.pine)
all_lit <- lit_erg %>%
full_join(lit_p, by = "ID") %>%
full_join(lit_cn, by = "ID")
# paste tree name
all_lit$treeName <- str_sub(all_lit$ID, 1, 2)
# paste litter tree origin (pine or eucalyptus)
all_lit <- all_lit %>%
mutate(litter_species = case_when(
grepl("Pine", ID) ~ "Pine",
grepl("Euc", ID) ~ "Euc",
TRUE ~ NA_character_
))
# paste litter type (leaf litter, bark, or organic layer)
all_lit <- all_lit %>%
mutate(litter_type = case_when(
grepl("LL", ID) ~ "Leaf litter",
grepl("B", ID) ~ "Bark",
grepl("OL", ID) ~ "Organic layer",
TRUE ~ NA_character_
))
# Create new dataframes by litter type
leaf.pine <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Pine")
leaf.euc <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Euc")
bark <- subset(all_lit, all_lit$litter_type %like% "Bark")
OL <- subset(all_lit, all_lit$litter_type %like% "Organic layer")
View(leaf.euc)
leaf.euc <- leaf.euc[c(2:7)]
colnames(leaf.euc)[1:6] <- c("Euc_leafLitter_ergosterol", "Euc_leafLitter_totP", "Euc_leafLitter_percP", "Euc_leafLitter_percN", "Euc_leafLitter_percC")
leaf.pine <- leaf.pine[c(2:7)]
colnames(leaf.pine)[1:6] <- c("Pine_leafLitter_ergosterol", "Pine_leafLitter_totP", "Pine_leafLitter_percP", "Pine_leafLitter_percN", "Pine_leafLitter_percC")
bark <- bark[c(2:7)]
colnames(bark)[1:6] <- c("Euc_Bark_ergosterol", "Euc_Bark_totP", "Euc_Bark_percP", "Euc_Bark_percN", "Euc_Bark_percC")
OL <- OL[c(2:7)]
colnames(OL)[1:6] <- c("Litter_OLayer_ergosterol", "Litter_OLayer_totP", "Litter_OLayer_percP", "Litter_OLayer_percN", "Litter_OLayer_percC")
#remove the one row with tree name "ER"...not sure what this row is??
OL <- OL[c(1:18),]
all_lit <- lit_erg %>%
full_join(lit_p, by = "ID") %>%
full_join(lit_cn, by = "ID")
# paste tree name
all_lit$treeName <- str_sub(all_lit$ID, 1, 2)
# paste litter tree origin (pine or eucalyptus)
all_lit <- all_lit %>%
mutate(litter_species = case_when(
grepl("Pine", ID) ~ "Pine",
grepl("Euc", ID) ~ "Euc",
TRUE ~ NA_character_
))
# paste litter type (leaf litter, bark, or organic layer)
all_lit <- all_lit %>%
mutate(litter_type = case_when(
grepl("LL", ID) ~ "Leaf litter",
grepl("B", ID) ~ "Bark",
grepl("OL", ID) ~ "Organic layer",
TRUE ~ NA_character_
))
# Create new dataframes by litter type
leaf.pine <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Pine")
leaf.euc <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Euc")
bark <- subset(all_lit, all_lit$litter_type %like% "Bark")
OL <- subset(all_lit, all_lit$litter_type %like% "Organic layer")
leaf.euc <- leaf.euc[c(2:7)]
colnames(leaf.euc)[1:5] <- c("Euc_leafLitter_ergosterol", "Euc_leafLitter_totP", "Euc_leafLitter_percP", "Euc_leafLitter_percN", "Euc_leafLitter_percC")
leaf.pine <- leaf.pine[c(2:7)]
colnames(leaf.pine)[1:5] <- c("Pine_leafLitter_ergosterol", "Pine_leafLitter_totP", "Pine_leafLitter_percP", "Pine_leafLitter_percN", "Pine_leafLitter_percC")
bark <- bark[c(2:7)]
colnames(bark)[1:5] <- c("Euc_Bark_ergosterol", "Euc_Bark_totP", "Euc_Bark_percP", "Euc_Bark_percN", "Euc_Bark_percC")
OL <- OL[c(2:7)]
colnames(OL)[1:5] <- c("Litter_OLayer_ergosterol", "Litter_OLayer_totP", "Litter_OLayer_percP", "Litter_OLayer_percN", "Litter_OLayer_percC")
#remove the one row with tree name "ER"...not sure what this row is??
OL <- OL[c(1:18),]
View(leaf.euc)
View(all_lit)
all_lit <- leaf.euc %>%
full_join(leaf.pine, by = "treeName") %>%
full_join(bark, by = "treeName") %>%
full_join(OL, by = "treeName")
View(all_lit)
all_lit$Litter_avg_ergosterol <- mean(all_lit$Euc_leafLitter_ergosterol, all_lit$Pine_leafLitter_ergosterol, all_lit$Euc_Bark_ergosterol, all_lit$Litter_OLayer_ergosterol)
?mean
all_lit$Litter_avg_ergosterol <- rowMeans(all_lit[, c(all_lit$Euc_leafLitter_ergosterol, all_lit$Pine_leafLitter_ergosterol,all_lit$Euc_Bark_ergosterol, all_lit$Litter_OLayer_ergosterol)])
all_lit$Litter_avg_ergosterol <- rowMeans(all_lit[, c('Euc_leafLitter_ergosterol', 'Pine_leafLitter_ergosterol','Euc_Bark_ergosterol', 'Litter_OLayer_ergosterol')])
View(all_lit)
all_lit$Litter_avg_ergosterol2 <- rowMeans(all_lit[, c('Euc_leafLitter_ergosterol', 'Pine_leafLitter_ergosterol','Euc_Bark_ergosterol', 'Litter_OLayer_ergosterol')], na.rm = TRUE)
all_lit$Litter_avg_ergosterol <- rowMeans(all_lit[, c('Euc_leafLitter_ergosterol', 'Pine_leafLitter_ergosterol','Euc_Bark_ergosterol', 'Litter_OLayer_ergosterol')], na.rm = TRUE)
all_lit <- leaf.euc %>%
full_join(leaf.pine, by = "treeName") %>%
full_join(bark, by = "treeName") %>%
full_join(OL, by = "treeName")
main <- read.csv("../Merged_data/Aus23_master_pooled.csv")
lit_erg <- read.csv("../Litter_data/Belanglo_litter_ergosterol.csv")
lit_p <- read.csv("../Litter_data/Belanglo_litter_P.csv")
lit_cn <- read.csv("../Litter_data/Belanglo_litter_CN.csv")
#select out columns we want
lit_erg <- lit_erg[c(1,4)]
lit_p <- lit_p[c(1,9,10)]
lit_cn <- lit_cn[c(2:4)]
all_lit <- lit_erg %>%
full_join(lit_p, by = "ID") %>%
full_join(lit_cn, by = "ID")
# paste tree name
all_lit$treeName <- str_sub(all_lit$ID, 1, 2)
# paste litter tree origin (pine or eucalyptus)
all_lit <- all_lit %>%
mutate(litter_species = case_when(
grepl("Pine", ID) ~ "Pine",
grepl("Euc", ID) ~ "Euc",
TRUE ~ NA_character_
))
# paste litter type (leaf litter, bark, or organic layer)
all_lit <- all_lit %>%
mutate(litter_type = case_when(
grepl("LL", ID) ~ "Leaf litter",
grepl("B", ID) ~ "Bark",
grepl("OL", ID) ~ "Organic layer",
TRUE ~ NA_character_
))
# Create new dataframes by litter type
leaf.pine <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Pine")
leaf.euc <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Euc")
bark <- subset(all_lit, all_lit$litter_type %like% "Bark")
OL <- subset(all_lit, all_lit$litter_type %like% "Organic layer")
leaf.euc <- leaf.euc[c(2:7)]
colnames(leaf.euc)[1:5] <- c("Euc_leafLitter_ergosterol", "Euc_leafLitter_totP", "Euc_leafLitter_percP", "Euc_leafLitter_percN", "Euc_leafLitter_percC")
leaf.pine <- leaf.pine[c(2:7)]
colnames(leaf.pine)[1:5] <- c("Pine_leafLitter_ergosterol", "Pine_leafLitter_totP", "Pine_leafLitter_percP", "Pine_leafLitter_percN", "Pine_leafLitter_percC")
bark <- bark[c(2:7)]
colnames(bark)[1:5] <- c("Euc_Bark_ergosterol", "Euc_Bark_totP", "Euc_Bark_percP", "Euc_Bark_percN", "Euc_Bark_percC")
OL <- OL[c(2:7)]
colnames(OL)[1:5] <- c("Litter_OLayer_ergosterol", "Litter_OLayer_totP", "Litter_OLayer_percP", "Litter_OLayer_percN", "Litter_OLayer_percC")
#remove the one row with tree name "ER"...not sure what this row is??
OL <- OL[c(1:18),]
lit_format <- leaf.euc %>%
full_join(leaf.pine, by = "treeName") %>%
full_join(bark, by = "treeName") %>%
full_join(OL, by = "treeName")
View(lit_format)
lit_format$Litter_avg_ergosterol <- rowMeans(all_lit[, c('Euc_leafLitter_ergosterol', 'Pine_leafLitter_ergosterol','Euc_Bark_ergosterol', 'Litter_OLayer_ergosterol')], na.rm = TRUE)
lit_format$Litter_avg_ergosterol <- rowMeans(lit_format[, c('Euc_leafLitter_ergosterol', 'Pine_leafLitter_ergosterol','Euc_Bark_ergosterol', 'Litter_OLayer_ergosterol')], na.rm = TRUE)
lit_format$Litter_avg_totP <- rowMeans(lit_format[, c('Euc_leafLitter_totP', 'Pine_leafLitter_totP','Euc_Bark_totP', 'Litter_OLayer_totP')], na.rm = TRUE)
lit_format$Litter_avg_percP <- rowMeans(lit_format[, c('Euc_leafLitter_percP', 'Pine_leafLitter_percP','Euc_Bark_percP', 'Litter_OLayer_percP')], na.rm = TRUE)
lit_format$Litter_avg_percN <- rowMeans(lit_format[, c('Euc_leafLitter_percN', 'Pine_leafLitter_percN','Euc_Bark_percN', 'Litter_OLayer_percN')], na.rm = TRUE)
lit_format$Litter_avg_percC <- rowMeans(lit_format[, c('Euc_leafLitter_percC', 'Pine_leafLitter_percC','Euc_Bark_percC', 'Litter_OLayer_percC')], na.rm = TRUE)
View(lit_format)
View(main)
# save final litter spreadsheet
write.csv(lit_format, "../Litter_data/Aus23_litter_allTraits.csv")
# save final litter spreadsheet
write.csv(lit_format, "../Litter_data/Aus23_litter_allNutrients.csv")
View(main)
# remove duplicate rows for the non-biolog data
main_nobio <- subset(main, main$day == 1)
View(main_nobio)
main_nobio <- main_nobio[c(2,3, 37,39:119)]
View(main_nobio)
View(main)
# pull out just biolog data
biolog <- main[c(4:37)]
View(biolog)
# pivot wider
biolog_wide <- biolog %>%
pivot_wider(
names_from = day,
values_from = c(2:34),
names_glue = "{.value}_Day{day}"
)
View(biolog_wide)
# pivot wider
biolog_wide <- biolog %>%
pivot_wider(
names_from = day,
values_from = c(2:34),
names_glue = "{.value}_Day{day}"
) %>%
select(1:33)
View(biolog_wide)
# pivot wider
biolog_wide <- biolog %>%
pivot_wider(
names_from = day,
values_from = c(2:4),
names_glue = "{.value}_Day{day}"
)
View(biolog_wide)
# separate by day
biolog1 <- subset(biolog, biolog$day ==1)
biolog3 <- subset(biolog, biolog$day ==3)
biolog5 <- subset(biolog, biolog$day ==5)
View(biolog3)
View(biolog1)
# edit column names
colnames(biolog1)[2:33] <- paste0(colnames(biolog1)[2:33], "_BiologDay1")
View(biolog3)
colnames(biolog3)[2:33] <- paste0(colnames(biolog1)[2:33], "_BiologDay3")
colnames(biolog5)[2:33] <- paste0(colnames(biolog1)[2:33], "_BiologDay5")
# join back together
biolog_wide <- biolog1 %>%
full_join(biolog3, by = "treeName") %>%
full_join(biolog5, by = "treeName")
View(biolog_wide)
# join back together
biolog_wide <- biolog1[2:34] %>%
full_join(biolog3[2:34], by = "treeName") %>%
full_join(biolog5[2:34], by = "treeName")
View(biolog_wide)
# merge back with main dataframe
main_edited <- merge(main_nobio, biolog_wide, by = "treeName")
View(main_edited)
all_lit <- lit_erg %>%
full_join(lit_p, by = "ID") %>%
full_join(lit_cn, by = "ID")
# paste tree name
all_lit$treeName <- str_sub(all_lit$ID, 1, 2)
# paste litter tree origin (pine or eucalyptus)
all_lit <- all_lit %>%
mutate(litter_species = case_when(
grepl("Pine", ID) ~ "Pine",
grepl("Euc", ID) ~ "Euc",
TRUE ~ NA_character_
))
# paste litter type (leaf litter, bark, or organic layer)
all_lit <- all_lit %>%
mutate(litter_type = case_when(
grepl("LL", ID) ~ "Leaf litter",
grepl("B", ID) ~ "Bark",
grepl("OL", ID) ~ "Organic layer",
TRUE ~ NA_character_
))
# Create new dataframes by litter type
leaf.pine <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Pine")
leaf.euc <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Euc")
bark <- subset(all_lit, all_lit$litter_type %like% "Bark")
OL <- subset(all_lit, all_lit$litter_type %like% "Organic layer")
leaf.euc <- leaf.euc[c(2:7)]
colnames(leaf.euc)[1:5] <- c("Euc_leafLitter_ergosterol", "Euc_leafLitter_totP", "Euc_leafLitter_percP", "Euc_leafLitter_percN", "Euc_leafLitter_percC")
leaf.pine <- leaf.pine[c(2:7)]
colnames(leaf.pine)[1:5] <- c("Pine_leafLitter_ergosterol", "Pine_leafLitter_totP", "Pine_leafLitter_percP", "Pine_leafLitter_percN", "Pine_leafLitter_percC")
bark <- bark[c(2:7)]
colnames(bark)[1:5] <- c("Euc_Bark_ergosterol", "Euc_Bark_totP", "Euc_Bark_percP", "Euc_Bark_percN", "Euc_Bark_percC")
OL <- OL[c(2:7)]
colnames(OL)[1:5] <- c("Litter_OLayer_ergosterol", "Litter_OLayer_totP", "Litter_OLayer_percP", "Litter_OLayer_percN", "Litter_OLayer_percC")
#remove the one row with tree name "ER"...not sure what this row is??
OL <- OL[c(1:18),]
lit_format <- leaf.euc %>%
full_join(leaf.pine, by = "treeName") %>%
full_join(bark, by = "treeName") %>%
full_join(OL, by = "treeName")
lit_format$Litter_avg_ergosterol <- rowMeans(lit_format[, c('Euc_leafLitter_ergosterol', 'Pine_leafLitter_ergosterol','Euc_Bark_ergosterol', 'Litter_OLayer_ergosterol')], na.rm = TRUE)
lit_format$Litter_avg_totP <- rowMeans(lit_format[, c('Euc_leafLitter_totP', 'Pine_leafLitter_totP','Euc_Bark_totP', 'Litter_OLayer_totP')], na.rm = TRUE)
lit_format$Litter_avg_percP <- rowMeans(lit_format[, c('Euc_leafLitter_percP', 'Pine_leafLitter_percP','Euc_Bark_percP', 'Litter_OLayer_percP')], na.rm = TRUE)
lit_format$Litter_avg_percN <- rowMeans(lit_format[, c('Euc_leafLitter_percN', 'Pine_leafLitter_percN','Euc_Bark_percN', 'Litter_OLayer_percN')], na.rm = TRUE)
lit_format$Litter_avg_percC <- rowMeans(lit_format[, c('Euc_leafLitter_percC', 'Pine_leafLitter_percC','Euc_Bark_percC', 'Litter_OLayer_percC')], na.rm = TRUE)
# save final litter spreadsheet
write.csv(lit_format, "../Litter_data/Aus23_litter_allNutrients.csv")
final <- merge(main_edited, lit_format, by = "treeName")
View(final)
write.csv(final, "../Merged_data/Aus23_allData_7Nov24.csv")
# read in data
main <- read.csv("../Merged_data/Aus23_allData_7Nov24.csv")
main <- read.csv("../Merged_data/Aus23_master_pooled.csv")
rm(main)
main <- read.csv("../Merged_data/Aus23_master_pooled.csv")
lit_erg <- read.csv("../Litter_data/Belanglo_litter_ergosterol.csv")
lit_erg <- read.csv("../Litter_data/Belanglo_litter_ergosterol.csv")
# read in data
main <- read.csv("../Merged_data/Aus23_allData_7Nov24.csv")
setwd("/Users/moniquegagnon/Desktop/GitHub/Aus-Invasions-2023-Course")
# read in data
main <- read.csv("../Merged_data/Aus23_allData_7Nov24.csv")
# read in data
main <- read.csv("/Merged_data/Aus23_allData_7Nov24.csv")
# read in data
main <- read.csv("/Users/moniquegagnon/Desktop/GitHub/Aus-Invasions-2023-Course/Merged_data/Aus23_allData_7Nov24.csv")
# read in data
main <- read.csv("Merged_data/Aus23_allData_7Nov24.csv")
setwd("Desktop/GitHub/Aus-Invasions-2023-Course")
setwd("/Desktop/GitHub/Aus-Invasions-2023-Course")
setwd(".~/Desktop/GitHub/Aus-Invasions-2023-Course")
setwd("~/Desktop/GitHub/Aus-Invasions-2023-Course")
# read in data
main <- read.csv("Merged_data/Aus23_allData_7Nov24.csv")
rm(main)
# read in data
main <- read.csv("Merged_data/Aus23_allData_7Nov24.csv")
View(main)
# read in data
main <- read.csv("Merged_data/Aus23_allData_7Nov24.csv", row.names=1)
View(main)
# examine distributions
hist(main$percN)
# examine distributions
hist(main$perc_N)
# examine distributions
hist(log(main$perc_N))
# examine distributions
hist(sqrt(main$perc_N))
# examine distributions
hist(log(main$perc_N))
# examine distributions
hist((main$perc_N))
# examine distributions
hist(log(main$perc_N))
hist(main$perc_C)
hist(log(main$perc_C))
hist(sqrt(main$perc_C))
hist((main$perc_C))
hist(main$perc_P)
hist(log(main$perc_P))
hist(sqrt(main$perc_P))
CNunpool <- read.csv("Merged_data/Aus23_microbes_soilCN_unpooled.csv", row.names=1) # pooled
View(CNunpool)
# unpooled
hist((CNunpool$perc_N))
# unpooled
hist(log(CNunpool$perc_N))
# unpooled
hist(sqrt(CNunpool$perc_N))
hist(CNunpool$perc_C)
hist(sqrt(CNunpool$perc_C))
hist(sqrt(CNunpool$perc_C))
hist(log(CNunpool$perc_C))
hist((CNunpool$perc_C))
# EMF vs soil CNP
plot <- CNunpool %>%
ggplot(aes(y = perc_C, x = ECM_abund_soil, color = TreeSpecies)) +
geom_point() +
scale_color_manual(values = c("#EAC435", "#345995"))+
geom_smooth(aes(group = TreeSpecies), method = "glm")
plot
# EMF vs soil CNP
plot <- CNunpool %>%
ggplot(aes(y = perc_C, x = ECM_abund, color = TreeSpecies)) +
geom_point() +
scale_color_manual(values = c("#EAC435", "#345995"))+
geom_smooth(aes(group = TreeSpecies), method = "glm")
plot
# EMF vs soil CNP
plot <- CNunpool %>%
ggplot(aes(y = perc_C, x = ECM_abund, color = TreeSpecies)) +
geom_point() +
scale_color_manual(values = c("#EAC435", "#345995"))+
geom_smooth(aes(group = TreeSpecies), method = "glm")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x = element_text(size=15),axis.title.y = element_text(size=15), axis.text=element_text(size=12), legend.key.size = unit(2, "lines"), legend.title = element_text(size=15), legend.text = element_text(size=12))
plot
# EMF vs soil CNP
plot <- CNunpool %>%
ggplot(aes(y = perc_C, x = ECM_abund, color = TreeSpecies)) +
geom_point() +
scale_color_manual(values = c("#EAC435", "#345995"))+
geom_smooth(aes(group = TreeSpecies), method = "glm", se = FALSE)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x = element_text(size=15),axis.title.y = element_text(size=15), axis.text=element_text(size=12), legend.key.size = unit(2, "lines"), legend.title = element_text(size=15), legend.text = element_text(size=12))
plot
# EMF vs soil CNP
soilEMF.C <- CNunpool %>%
ggplot(aes(y = perc_C, x = ECM_abund, color = TreeSpecies)) +
geom_point() +
scale_color_manual(values = c("#EAC435", "#345995"))+
geom_smooth(aes(group = TreeSpecies), method = "glm", se = FALSE)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x = element_text(size=15),axis.title.y = element_text(size=15), axis.text=element_text(size=12), legend.key.size = unit(2, "lines"), legend.title = element_text(size=15), legend.text = element_text(size=12))
soilEMF.C
soilEMF.N <- CNunpool %>%
ggplot(aes(y = perc_C, x = ECM_abund, color = TreeSpecies)) +
geom_point() +
scale_color_manual(values = c("#EAC435", "#345995"))+
geom_smooth(aes(group = TreeSpecies), method = "glm", se = FALSE)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x = element_text(size=15),axis.title.y = element_text(size=15), axis.text=element_text(size=12), legend.key.size = unit(2, "lines"), legend.title = element_text(size=15), legend.text = element_text(size=12))
soilEMF.N # no strong trend
soilEMF.N <- CNunpool %>%
ggplot(aes(y = perc_N, x = ECM_abund, color = TreeSpecies)) +
geom_point() +
scale_color_manual(values = c("#EAC435", "#345995"))+
geom_smooth(aes(group = TreeSpecies), method = "glm", se = FALSE)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.title.x = element_text(size=15),axis.title.y = element_text(size=15), axis.text=element_text(size=12), legend.key.size = unit(2, "lines"), legend.title = element_text(size=15), legend.text = element_text(size=12))
soilEMF.N # no strong trend
########### make a correlation heatmap between all variables ###############
library(Hmisc)
#select out continuous variables only
corr_vars <- main[c(4:7,9:77,80:205)]
r <- rcorr(as.matrix(data_vars))$R
r <- rcorr(as.matrix(corr_vars))$R
r <- rcorr(as.matrix(corr_vars))
View(r)
r <- rcorr(as.matrix(corr_vars))$r
p <- rcorr(as.matrix(data_vars))$P
p <- rcorr(as.matrix(corr_vars))$P
View(p)
#save correlations and p values
write.csv(r, "Correlations/All_variable_correlations.csv")
write.csv(p, "Correlations/All_variable_correlation_pvals.csv")
main <- read.csv("../Merged_data/Aus23_master_pooled.csv")
lit_erg <- read.csv("../Litter_data/Belanglo_litter_ergosterol.csv")
lit_p <- read.csv("../Litter_data/Belanglo_litter_P.csv")
lit_cn <- read.csv("../Litter_data/Belanglo_litter_CN.csv")
#select out columns we want
lit_erg <- lit_erg[c(1,4)]
lit_p <- lit_p[c(1,9,10)]
lit_cn <- lit_cn[c(2:4)]
# remove duplicate rows for the non-biolog data
main_nobio <- subset(main, main$day == 1)
main_nobio <- main_nobio[c(2,3, 37,39:119)]
# pull out just biolog data
biolog <- main[c(4:37)]
# separate by day
biolog1 <- subset(biolog, biolog$day ==1)
biolog3 <- subset(biolog, biolog$day ==3)
biolog5 <- subset(biolog, biolog$day ==5)
# edit column names
colnames(biolog1)[2:33] <- paste0(colnames(biolog1)[2:33], "_BiologDay1")
colnames(biolog3)[2:33] <- paste0(colnames(biolog1)[2:33], "_BiologDay3")
colnames(biolog5)[2:33] <- paste0(colnames(biolog1)[2:33], "_BiologDay5")
View(biolog3)
# separate by day
biolog1 <- subset(biolog, biolog$day ==1)
biolog3 <- subset(biolog, biolog$day ==3)
biolog5 <- subset(biolog, biolog$day ==5)
# edit column names
colnames(biolog1)[2:33] <- paste0(colnames(biolog1)[2:33], "_BiologDay1")
colnames(biolog3)[2:33] <- paste0(colnames(biolog3)[2:33], "_BiologDay3")
colnames(biolog5)[2:33] <- paste0(colnames(biolog5)[2:33], "_BiologDay5")
# join back together
biolog_wide <- biolog1[2:34] %>%
full_join(biolog3[2:34], by = "treeName") %>%
full_join(biolog5[2:34], by = "treeName")
View(biolog_wide)
# merge back with main dataframe
main_edited <- merge(main_nobio, biolog_wide, by = "treeName")
all_lit <- lit_erg %>%
full_join(lit_p, by = "ID") %>%
full_join(lit_cn, by = "ID")
# paste tree name
all_lit$treeName <- str_sub(all_lit$ID, 1, 2)
# paste litter tree origin (pine or eucalyptus)
all_lit <- all_lit %>%
mutate(litter_species = case_when(
grepl("Pine", ID) ~ "Pine",
grepl("Euc", ID) ~ "Euc",
TRUE ~ NA_character_
))
# paste litter type (leaf litter, bark, or organic layer)
all_lit <- all_lit %>%
mutate(litter_type = case_when(
grepl("LL", ID) ~ "Leaf litter",
grepl("B", ID) ~ "Bark",
grepl("OL", ID) ~ "Organic layer",
TRUE ~ NA_character_
))
# Create new dataframes by litter type
leaf.pine <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Pine")
leaf.euc <- subset(all_lit, all_lit$litter_type %like% "Leaf litter" & all_lit$litter_species %like% "Euc")
bark <- subset(all_lit, all_lit$litter_type %like% "Bark")
OL <- subset(all_lit, all_lit$litter_type %like% "Organic layer")
leaf.euc <- leaf.euc[c(2:7)]
colnames(leaf.euc)[1:5] <- c("Euc_leafLitter_ergosterol", "Euc_leafLitter_totP", "Euc_leafLitter_percP", "Euc_leafLitter_percN", "Euc_leafLitter_percC")
leaf.pine <- leaf.pine[c(2:7)]
colnames(leaf.pine)[1:5] <- c("Pine_leafLitter_ergosterol", "Pine_leafLitter_totP", "Pine_leafLitter_percP", "Pine_leafLitter_percN", "Pine_leafLitter_percC")
bark <- bark[c(2:7)]
colnames(bark)[1:5] <- c("Euc_Bark_ergosterol", "Euc_Bark_totP", "Euc_Bark_percP", "Euc_Bark_percN", "Euc_Bark_percC")
OL <- OL[c(2:7)]
colnames(OL)[1:5] <- c("Litter_OLayer_ergosterol", "Litter_OLayer_totP", "Litter_OLayer_percP", "Litter_OLayer_percN", "Litter_OLayer_percC")
#remove the one row with tree name "ER"...not sure what this row is??
OL <- OL[c(1:18),]
lit_format <- leaf.euc %>%
full_join(leaf.pine, by = "treeName") %>%
full_join(bark, by = "treeName") %>%
full_join(OL, by = "treeName")
lit_format$Litter_avg_ergosterol <- rowMeans(lit_format[, c('Euc_leafLitter_ergosterol', 'Pine_leafLitter_ergosterol','Euc_Bark_ergosterol', 'Litter_OLayer_ergosterol')], na.rm = TRUE)
lit_format$Litter_avg_totP <- rowMeans(lit_format[, c('Euc_leafLitter_totP', 'Pine_leafLitter_totP','Euc_Bark_totP', 'Litter_OLayer_totP')], na.rm = TRUE)
lit_format$Litter_avg_percP <- rowMeans(lit_format[, c('Euc_leafLitter_percP', 'Pine_leafLitter_percP','Euc_Bark_percP', 'Litter_OLayer_percP')], na.rm = TRUE)
lit_format$Litter_avg_percN <- rowMeans(lit_format[, c('Euc_leafLitter_percN', 'Pine_leafLitter_percN','Euc_Bark_percN', 'Litter_OLayer_percN')], na.rm = TRUE)
lit_format$Litter_avg_percC <- rowMeans(lit_format[, c('Euc_leafLitter_percC', 'Pine_leafLitter_percC','Euc_Bark_percC', 'Litter_OLayer_percC')], na.rm = TRUE)
# save final litter spreadsheet
write.csv(lit_format, "../Litter_data/Aus23_litter_allNutrients.csv")
final <- merge(main_edited, lit_format, by = "treeName")
write.csv(final, "../Merged_data/Aus23_allData_7Nov24.csv")
View(final)
# read in data
main <- read.csv("Merged_data/Aus23_allData_7Nov24.csv", row.names=1) # pooled
CNunpool <- read.csv("Merged_data/Aus23_microbes_soilCN_unpooled.csv", row.names=1) # pooled
########### make a correlation heatmap between all variables ###############
library(Hmisc)
#select out continuous variables only
corr_vars <- main[c(4:7,9:77,80:205)]
r <- rcorr(as.matrix(corr_vars))$r
p <- rcorr(as.matrix(corr_vars))$P
#save correlations and p values
write.csv(r, "Correlations/All_variable_correlations.csv")
write.csv(p, "Correlations/All_variable_correlation_pvals.csv")
hist(sqrt(main$perc_P))
# RUN STATS
aov <- aov(data=main, perc_P ~ tree_spp)
summary(aov)
# RUN STATS
aov <- aov(data=main, sqrt(perc_P) ~ tree_spp)
summary(aov)
