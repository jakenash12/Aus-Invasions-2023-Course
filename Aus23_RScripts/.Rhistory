mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS) %>%
filter(TreeSpecies!="Neg") %>%
ggplot(aes(x=SampleType,
y=`0159b818ddff01432531c9e9fe3d4996`,
color=TreeSpecies)) +
geom_boxplot() +
geom_point(position = position_jitterdodge(), alpha=0.7, size=2)
OtuMatITS_rel %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS) %>%
filter(TreeSpecies!="Neg") %>%
ggplot(aes(x=SampleType,
y=`0159b818ddff01432531c9e9fe3d4996`,
color=TreeSpecies)) +
geom_violin() +
geom_point(position = position_jitterdodge(), alpha=0.7, size=2)
OtuMatITS_rel %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS) %>%
filter(TreeSpecies!="Neg") %>%
ggplot(aes(x=SampleType,
y=`0159b818ddff01432531c9e9fe3d4996`,
color=TreeSpecies)) +
geom_violin()
OtuMatITS_rel %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS) %>%
filter(TreeSpecies!="Neg") %>%
ggplot(aes(x=SampleType,
y=`0159b818ddff01432531c9e9fe3d4996`,
color=TreeSpecies)) +
geom_violin()
OtuMatITS_rel %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS) %>%
filter(TreeSpecies!="Neg") %>%
ggplot(aes(x=SampleType,
y=`0159b818ddff01432531c9e9fe3d4996`,
fill=TreeSpecies)) +
geom_violin()
OtuMatITS_rel %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS) %>%
filter(TreeSpecies!="Neg") %>%
ggplot(aes(x=SampleType,
y=`0159b818ddff01432531c9e9fe3d4996`,
color=TreeSpecies)) +
geom_boxplot() +
geom_point(position = position_jitterdodge(), alpha=0.7, size=2)
OtuMatITS_rel %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS) %>%
filter(TreeSpecies=="Pine",
SampleType=="Root") %$%
`0159b818ddff01432531c9e9fe3d4996` %>% hist
OtuMatITS_rel %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS) %>%
filter(TreeSpecies=="Pine",
SampleType=="Root") %$%
`0159b818ddff01432531c9e9fe3d4996` %>%
hist(bins=20)
OtuMatITS_rel %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS) %>%
filter(TreeSpecies=="Pine",
SampleType=="Root") %$%
`0159b818ddff01432531c9e9fe3d4996` %>%
hist(breaks=20)
OtuMatITS_rel %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS) %>%
filter(TreeSpecies=="Pine",
SampleType=="Root") %$%
`0159b818ddff01432531c9e9fe3d4996` %>%
hist(breaks=20)
list.files("../Aus23_ITS_Metabarcoding/")
list.files("../Aus23_16SS_Metabarcoding/")
list.files("../Aus23_16S_Metabarcoding/")
OtuMat16S=
read_tsv("../Aus23_16S_Metabarcoding/Aus23_16S_ASV_table.tsv", skip=1) %>%
column_to_rownames("#OTU ID")
OtuMatITS_filt=
OtuMatITS %>%
select(-Neg_control)
OtuMatITS_filt=
OtuMatITS %>%
select(-Neg_Control)
OtuMat16S_filt=
OtuMat16S %>%
select(-Neg_Control)
Metadata_16S=
read_tsv("../Aus23_16S_Metabarcoding/MetabarcodingMetadata.txt") %>%
slice(-1) %>% #remove the comment row
rename("SampleID"=`sample-id`) %>% #rename SampleID column
mutate(TreeSampleType = gsub("-.", "", SampleID)) #generate new column with Tree ID and sample type concatenated
TaxMat16S_SILVA=
read_tsv("../Aus23_16S_Metabarcoding/Aus23_16S_SilvaTaxonomy_16S.tsv") %>%
rename("otu"="Feature ID") %>%
select(-Confidence) %>%
separate_wider_delim(too_few="align_start", cols = Taxon, delim = ";", names = c("Kingdom", "Phylum","Class", "Order","Family","Genus","Species", "SH")) %>%
mutate(across(!contains("otu"), ~extract_text(.)))
#create 16S OTU table just with Root samples
OtuMat16S_root=
OtuMat16S_filt %>%
t %>%
as.data.frame %>%
select(contains("Root"))
#create metadata table just with root samples in 16S otu table
Metadata_16S_root=
Metadata_16S %>%
filter(SampleID %in% colnames(OtuMat16S_root))
#runs LinDA test for effect of tree species, using tree individual as random effects
Linda_16S_root =
linda(
feature.dat=OtuMat16S_root,
meta.dat=Metadata_16S_root,
formula='~TreeSpecies + (1|TreeSampleType)',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
dim(OtuMat16S_root)
dim(OtuMat16S_filt)
dim(OtuMat16S_root)
#create 16S OTU table just with Root samples
OtuMat16S_root=
OtuMat16S_filt %>%
t %>%
as.data.frame %>% colnames
OtuMat16S_root
#create 16S OTU table just with Root samples
OtuMat16S_root=
OtuMat16S_filt %>%
select(contains("Root"))
#create ITS OTU table just with Soil samples
OtuMatITS_soil=
OtuMatITS_filt %>%
select(contains("Soil"))
dim(OtuMatITS_soil)
#create ITS OTU table just with Root samples
OtuMatITS_root=
OtuMatITS_filt %>%
select(contains("Root"))
#create 16S OTU table just with Root samples
OtuMat16S_root=
OtuMat16S_filt %>%
select(contains("Root"))
#create metadata table just with root samples in 16S otu table
Metadata_16S_root=
Metadata_16S %>%
filter(SampleID %in% colnames(OtuMat16S_root))
#runs LinDA test for effect of tree species, using tree individual as random effects
Linda_16S_root =
linda(
feature.dat=OtuMat16S_root,
meta.dat=Metadata_16S_root,
formula='~TreeSpecies + (1|TreeSampleType)',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
#creates a formatted dataframe for 16S root samples LinDA
Linda_16S_root_df=
as.data.frame(Linda_16S_root$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMat16S)
View(Linda_16S_root_df)
#create 16S OTU table just with Soil samples
OtuMat16S_soil=
OtuMat16S_filt %>%
select(contains("Soil"))
#create metadata table just with root samples in 16S otu table
Metadata_16S_soil=
Metadata_16S %>%
filter(SampleID %in% colnames(OtuMat16S_soil))
#runs LinDA test for effect of tree species, using tree individual as random effects
Linda_16S_soil =
linda(
feature.dat=OtuMat16S_soil,
meta.dat=Metadata_16S_soil,
formula='~TreeSpecies + (1|TreeSampleType)',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
View(Linda_16S_soil_df)
#creates a formatted dataframe for 16S root samples LinDA
Linda_16S_soil_df=
as.data.frame(Linda_16S_soil$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMat16S)
#creates a formatted dataframe for 16S root samples LinDA
View(Linda_16S_soil_df)
knitr::opts_chunk$set(echo = TRUE)
filepath="../Aus23_16S_Metabarcoding/OTUTables/"
write.csv(OtuMat16S_filter, paste(filepath, "OtuMat16S_filter.csv", sep=""))
OtuMat16S=
read.csv("../Aus23_16S_Metabarcoding/OTUTables/OtuMat16S_filter.csv")
colnames(OtuMat16S)
View(OtuMat16S)
OtuMat16S_filter=
read.csv("../Aus23_16S_Metabarcoding/OTUTables/OtuMat16S_filter.csv", row.names = TRUE)
OtuMat16S_filter=
read.csv("../Aus23_16S_Metabarcoding/OTUTables/OtuMat16S_filter.csv", row.names = X)
OtuMat16S_filter=
read.csv("../Aus23_16S_Metabarcoding/OTUTables/OtuMat16S_filter.csv", row.names = 1)
OtuMat16S_filter %>% View
OtuMat16S=
read_tsv("../Aus23_16S_Metabarcoding/Aus23_16S_ASV_table.tsv", skip=1) %>%
column_to_rownames("#OTU ID")
View(OtuMat16S)
ASV_mito_chloro_list=
TaxMat16S_SILVA %>%
filter((Order=="Chloroplast" |
Family=="Mitochondria")) %$%
otu
OtuMat16S_filter=
OtuMat16S %>%
filter(!(rownames(.) %in% ASV_mito_chloro_list))
View(OtuMat16S)
write.csv(OtuMat16S_filter, paste(filepath, "OtuMat16S_filter.csv", sep=""))
OtuMat16S_filter=
read.csv("../Aus23_16S_Metabarcoding/OTUTables/OtuMat16S_filter.csv", row.names = 1)
View(OtuMat16S_filter)
library(tidyverse)
library(vegan)
library(magrittr)
library(tibble)
write_csv(as.data.frame(as.matrix(Aitchison_unpooled_rel_16S)), paste(filepath, "Aitchison_unpooled_rel_16S.csv", sep=""))
write_csv(as.data.frame(as.matrix(Aitchison_pooled_rel_16S)), paste(filepath, "Aitchison_pooled_rel_16S.csv", sep=""))
write.csv2(OtuMat16S_filter, paste(filepath, "OtuMat16S_filter.csv", sep=""))
filepath="../Aus23_16S_Metabarcoding/OTUTables/"
write.csv(OtuMat16S_filter, paste(filepath, "OtuMat16S_filter.csv", sep=""))
write.csv(OtuMat16S_rare, paste(filepath, "OtuMat16S_rare.csv", sep=""))
write.csv(OtuMat16S_rare_rel, paste(filepath, "OtuMat16S_rare_rel.csv", sep=""))
write.csv(OtuMat16S_rare_pooled, paste(filepath, "OtuMat16S_rare_pooled.csv", sep=""))
write.csv(OtuMat16S_rare_pooled_rel, paste(filepath, "OtuMat16S_rare_pooled_rel.csv", sep=""))
write.csv(OtuMat16S_rel, paste(filepath, "OtuMat16S_rel.csv", sep=""))
write.csv(OtuMat16S_pooled_rel, paste(filepath, "OtuMat16S_pooled_rel.csv", sep=""))
write.csv(as.matrix(Aitchison_unpooled_rel_16S), paste(filepath, "Aitchison_unpooled_rel_16S.csv", sep=""))
writ._csv(as.matrix(Aitchison_pooled_rel_16S), paste(filepath, "Aitchison_pooled_rel_16S.csv", sep=""))
write.csv(as.matrix(Aitchison_pooled_rel_16S), paste(filepath, "Aitchison_pooled_rel_16S.csv", sep=""))
OtuMat16S_filter=
read.csv("../Aus23_16S_Metabarcoding/OTUTables/OtuMat16S_filter.csv", row.names = 1)
View(OtuMat16S_filter)
OtuMat16S_filter=
read.csv("../Aus23_16S_Metabarcoding/OTUTables/OtuMat16S_filter.csv", row.names = 1) %>%
mutate(across(everything())) %>%
rename_with(~ gsub("\\.", "-", .))
OtuMat16S_filt=
OtuMat16S %>%
select(-Neg_Control)
Metadata_16S=
read_tsv("../Aus23_16S_Metabarcoding/MetabarcodingMetadata.txt") %>%
slice(-1) %>% #remove the comment row
rename("SampleID"=`sample-id`) %>% #rename SampleID column
mutate(TreeSampleType = gsub("-.", "", SampleID)) #generate new column with Tree ID and sample type concatenated
TaxMat16S_SILVA=
read_tsv("../Aus23_16S_Metabarcoding/Aus23_16S_SilvaTaxonomy_16S.tsv") %>%
rename("otu"="Feature ID") %>%
select(-Confidence) %>%
separate_wider_delim(too_few="align_start", cols = Taxon, delim = ";", names = c("Kingdom", "Phylum","Class", "Order","Family","Genus","Species", "SH")) %>%
mutate(across(!contains("otu"), ~extract_text(.)))
#create 16S OTU table just with Root samples
OtuMat16S_root=
OtuMat16S_filt %>%
select(contains("Root"))
#create metadata table just with root samples in 16S otu table
Metadata_16S_root=
Metadata_16S %>%
filter(SampleID %in% colnames(OtuMat16S_root))
#runs LinDA test for effect of tree species, using tree individual as random effects
Linda_16S_root =
linda(
feature.dat=OtuMat16S_root,
meta.dat=Metadata_16S_root,
formula='~TreeSpecies + (1|TreeSampleType)',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
#creates a formatted dataframe for 16S root samples LinDA
Linda_16S_root_df=
as.data.frame(Linda_16S_root$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMat16S)
View(Linda_16S_root_df)
#create 16S OTU table just with Soil samples
OtuMat16S_soil=
OtuMat16S_filt %>%
select(contains("Soil"))
#create metadata table just with root samples in 16S otu table
Metadata_16S_soil=
Metadata_16S %>%
filter(SampleID %in% colnames(OtuMat16S_soil))
#runs LinDA test for effect of tree species, using tree individual as random effects
Linda_16S_soil =
linda(
feature.dat=OtuMat16S_soil,
meta.dat=Metadata_16S_soil,
formula='~TreeSpecies + (1|TreeSampleType)',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
#creates a formatted dataframe for 16S root samples LinDA
Linda_16S_soil_df=
as.data.frame(Linda_16S_soil$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMat16S)
n_ITS_root=
Linda_ITS_root_df %>%
filter(reject) %>%
nrow
n_ITS_root
n_ITS_soil=
Linda_ITS_soil_df %>%
filter(reject) %>%
nrow
n_ITS_soil
n_ITS_soil
n_16S_root
n_16S_root=
Linda_16S_root_df %>%
filter(reject) %>%
nrow
n_16S_soil=
Linda_16S_soil_df %>%
filter(reject) %>%
nrow
n_ITS_soil
n_16S_root
n_16S_soil
LINDA_summary=
data.frame(Locus=c("ITS", "ITS", "16S", "16S"),
SampleType=c("Root","Soil","Root","Soil"),
n_taxa_significant=c(n_ITS_root, n_ITS_soil, n_16S_root, n_16S_soil))
LINDA_summary
Metadata_16S=
read_tsv("../Aus23_16S_Metabarcoding/MetabarcodingMetadata.txt") %>%
slice(-1) %>% #remove the comment row
rename("SampleID"=`sample-id`) %>% #rename SampleID column
mutate(TreeSampleType = gsub("-.", "", SampleID)) #generate new column with Tree ID and sample type concatenated
TaxMat16S_SILVA=
read_tsv("../Aus23_16S_Metabarcoding/Aus23_16S_SilvaTaxonomy_16S.tsv") %>%
rename("otu"="Feature ID") %>%
select(-Confidence) %>%
separate_wider_delim(too_few="align_start", cols = Taxon, delim = ";", names = c("Kingdom", "Phylum","Class", "Order","Family","Genus","Species", "SH")) %>%
mutate(across(!contains("otu"), ~extract_text(.)))
nrow(OtuMat16S_filter)
View(Metadata_ITS_root)
Linda_ITS_root_no_random =
linda(
feature.dat=OtuMatITS_root,
meta.dat=Metadata_ITS_root,
formula='~TreeSpecies',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
Linda_ITS_root_no_random_df=
as.data.frame(Linda_ITS_root_no_random$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMatITS)
View(Linda_ITS_root_no_random_df)
Linda_ITS_root_no_random_df %>%
filter(reject) %>%
nrow
Linda_ITS_root_df %>%
filter(reject) %>%
nrow
View(LINDA_summary)
LINDA_summary=
data.frame(Locus=c("ITS", "ITS", "16S", "16S",
"ITS", "ITS", "16S", "16S"),
SampleType=c("Root","Soil","Root","Soil",
"Root","Soil","Root","Soil"),
ModelType=c("RandomEffect","RandomEffect","RandomEffect","RandomEffect",
"NoRandomEffect","NoRandomEffect","NoRandomEffect","NoRandomEffect"),
n_taxa_significant=c(n_ITS_root, n_ITS_soil, n_16S_root, n_16S_soil,
n_ITS_root_no_random, n_ITS_soil_no_random, n_16S_root_no_random, n_16S_soil_no_random))
n_ITS_root=
Linda_ITS_root_df %>%
filter(reject) %>%
nrow
n_ITS_soil=
Linda_ITS_soil_df %>%
filter(reject) %>%
nrow
n_16S_root=
Linda_16S_root_df %>%
filter(reject) %>%
nrow
n_16S_soil=
Linda_16S_soil_df %>%
filter(reject) %>%
nrow
n_ITS_root_no_random=
Linda_ITS_root_no_random_df %>%
filter(reject) %>%
nrow
n_ITS_soil_no_random=
Linda_ITS_soil_no_random_df %>%
filter(reject) %>%
nrow
Linda_16S_soil_no_random_df
Linda_16S_soil_no_random_df=
as.data.frame(Linda_16S_soil_no_random$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMat16S_SILVA)
Linda_16S_soil_no_random =
linda(
feature.dat=OtuMat16S_soil,
meta.dat=Metadata_16S_soil,
formula='~TreeSpecies',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
Linda_16S_soil_no_random_df=
as.data.frame(Linda_16S_soil_no_random$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMat16S_SILVA)
Linda_16S_root_no_random_df
Linda_16S_soil_no_random_df
View(Linda_16S_soil_no_random_df)
save.image()
Linda_ITS_soil_no_random =
linda(
feature.dat=OtuMatITS_soil,
meta.dat=Metadata_ITS_soil,
formula='~TreeSpecies',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
Linda_ITS_root_no_random =
linda(
feature.dat=OtuMatITS_root,
meta.dat=Metadata_ITS_root,
formula='~TreeSpecies',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
Linda_ITS_root_no_random =
linda(
feature.dat=OtuMatITS_root,
meta.dat=Metadata_ITS_root,
formula='~TreeSpecies',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
Linda_ITS_root_no_random_df=
as.data.frame(Linda_ITS_root_no_random$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMatITS)
Linda_ITS_root_no_random =
linda(
feature.dat=OtuMatITS_root,
meta.dat=Metadata_ITS_root,
formula='~TreeSpecies',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="fdr",
alpha=0.05)
Linda_ITS_root_no_random_df=
as.data.frame(Linda_ITS_root_no_random$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMatITS)
View(Linda_ITS_soil_no_random_df)
Linda_ITS_soil_no_random_df=
as.data.frame(Linda_ITS_soil_no_random$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMatITS)
View(Linda_ITS_soil_no_random_df)
View(Linda_ITS_root_no_random_df)
LINDA_summary
LINDA_summary=
data.frame(Locus=c("ITS", "ITS", "16S", "16S",
"ITS", "ITS", "16S", "16S"),
SampleType=c("Root","Soil","Root","Soil",
"Root","Soil","Root","Soil"),
ModelType=c("RandomEffect","RandomEffect","RandomEffect","RandomEffect",
"NoRandomEffect","NoRandomEffect","NoRandomEffect","NoRandomEffect"),
n_taxa_significant=c(n_ITS_root, n_ITS_soil, n_16S_root, n_16S_soil,
n_ITS_root_no_random, n_ITS_soil_no_random, n_16S_root_no_random, n_16S_soil_no_random))
