p.adj.method="holm",
alpha=0.05)
#creates a formatted dataframe for ITS root samples LinDA
Linda_ITS_soil_df=
as.data.frame(Linda_ITS_soil$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMatITS)
Linda_ITS_soil_no_random_df=
as.data.frame(Linda_ITS_soil_no_random$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMatITS)
#create 16S OTU table just with Root samples
OtuMat16S_root=
OtuMat16S_filter %>%
select(contains("Root"))
#create metadata table just with root samples in 16S otu table
Metadata_16S_root=
Metadata_16S %>%
filter(SampleID %in% colnames(OtuMat16S_root))
#runs LinDA test for effect of tree species, using tree individual as random effects
Linda_16S_root =
linda(
feature.dat=OtuMat16S_root,
meta.dat=Metadata_16S_root,
formula='~TreeSpecies + (1|TreeSampleType)',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="holm",
alpha=0.05)
Linda_16S_root_no_random =
linda(
feature.dat=OtuMat16S_root,
meta.dat=Metadata_16S_root,
formula='~TreeSpecies',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="holm",
alpha=0.05)
#creates a formatted dataframe for 16S root samples LinDA
Linda_16S_root_df=
as.data.frame(Linda_16S_root$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMat16S_SILVA)
Linda_16S_root_no_random_df=
as.data.frame(Linda_16S_root_no_random$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMat16S_SILVA)
#create 16S OTU table just with Soil samples
OtuMat16S_soil=
OtuMat16S_filter %>%
select(contains("Soil"))
#create metadata table just with root samples in 16S otu table
Metadata_16S_soil=
Metadata_16S %>%
filter(SampleID %in% colnames(OtuMat16S_soil))
#runs LinDA test for effect of tree species, using tree individual as random effects
Linda_16S_soil =
linda(
feature.dat=OtuMat16S_soil,
meta.dat=Metadata_16S_soil,
formula='~TreeSpecies + (1|TreeSampleType)',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="holm",
alpha=0.05)
Linda_16S_soil_no_random =
linda(
feature.dat=OtuMat16S_soil,
meta.dat=Metadata_16S_soil,
formula='~TreeSpecies',
feature.dat.type="count",
prev.filter=0.1,
zero.handling="pseudo.cnt",
pseudo.cnt = 0.5,
p.adj.method="holm",
alpha=0.05)
#creates a formatted dataframe for 16S root samples LinDA
Linda_16S_soil_df=
as.data.frame(Linda_16S_soil$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMat16S_SILVA)
Linda_16S_soil_no_random_df=
as.data.frame(Linda_16S_soil_no_random$output$TreeSpeciesPine) %>%
mutate(otu=rownames(.)) %>%
left_join(TaxMat16S_SILVA)
n_ITS_root=
Linda_ITS_root_df %>%
filter(reject) %>%
nrow
n_ITS_soil=
Linda_ITS_soil_df %>%
filter(reject) %>%
nrow
n_16S_root=
Linda_16S_root_df %>%
filter(reject) %>%
nrow
n_16S_soil=
Linda_16S_soil_df %>%
filter(reject) %>%
nrow
n_ITS_root_no_random=
Linda_ITS_root_no_random_df %>%
filter(reject) %>%
nrow
n_ITS_soil_no_random=
Linda_ITS_soil_no_random_df %>%
filter(reject) %>%
nrow
n_16S_root_no_random=
Linda_16S_root_no_random_df %>%
filter(reject) %>%
nrow
n_16S_soil_no_random=
Linda_16S_soil_no_random_df %>%
filter(reject) %>%
nrow
LINDA_summary=
data.frame(Locus=c("ITS", "ITS", "16S", "16S",
"ITS", "ITS", "16S", "16S"),
SampleType=c("Root","Soil","Root","Soil",
"Root","Soil","Root","Soil"),
ModelType=c("RandomEffect","RandomEffect","RandomEffect","RandomEffect",
"NoRandomEffect","NoRandomEffect","NoRandomEffect","NoRandomEffect"),
n_taxa_significant=c(n_ITS_root, n_ITS_soil, n_16S_root, n_16S_soil,
n_ITS_root_no_random, n_ITS_soil_no_random, n_16S_root_no_random, n_16S_soil_no_random))
LINDA_summary
OTU_ITS_phyloseq=
OtuMatITS %>%
as.matrix %>%
otu_table(taxa_are_rows = TRUE)
TAX_ITS_phyloseq=
TaxMatITS %>%
filter(otu %in% rownames(OtuMatITS)) %>%
column_to_rownames("otu") %>%
as.matrix %>%
tax_table
SAMPLES_ITS_phyloseq=
Metadata_ITS %>%
filter(SampleID %in% colnames(OTU_ITS_phyloseq)) %>%
column_to_rownames("SampleID") %>%
sample_data()
PhyloseqITS <- phyloseq(OTU_ITS_phyloseq, TAX_ITS_phyloseq, SAMPLES_ITS_phyloseq)
PhyloseqITS_root=subset_samples(PhyloseqITS, SampleType=="Root")
ANCOM_ITS_root = ancombc2(data = PhyloseqITS_root, tax_level = NULL,
fix_formula = "TreeSpecies", rand_formula = NULL,
p_adj_method = "fdr", pseudo_sens = TRUE,
prv_cut = 0.10, lib_cut = 1000, s0_perc = 0.05,
group = "TreeSpecies", struc_zero = FALSE, neg_lb = FALSE,
alpha = 0.05, n_cl = 2, verbose = TRUE,
global = TRUE, pairwise = FALSE,
dunnet = FALSE, trend = FALSE,
iter_control = list(tol = 1e-5, max_iter = 20,
verbose = FALSE),
em_control = list(tol = 1e-5, max_iter = 100),
lme_control = NULL,
mdfdr_control = list(fwer_ctrl_method = "fdr", B = 100),
trend_control = NULL)
ANCOM_ITS_root_df=
ANCOM_ITS_root$res %>%
as.data.frame %>%
filter(diff_TreeSpeciesPine) %>%
rename("otu"="taxon") %>%
left_join(TaxMatITS)
ANCOM_ITS_root_no_random=ANCOM_ITS_root
ANCOM_ITS_root_no_random_df=
ANCOM_ITS_root_no_random$res %>%
as.data.frame %>%
filter(diff_TreeSpeciesPine) %>%
rename("otu"="taxon") %>%
left_join(TaxMatITS)
View(ANCOM_ITS_root_no_random_df)
ANCOM_ITS_root = ancombc2(data = PhyloseqITS_root, tax_level = NULL,
fix_formula = "TreeSpecies", rand_formula = "(1|TreeSampleType)",
p_adj_method = "fdr", pseudo_sens = TRUE,
prv_cut = 0.10, lib_cut = 1000, s0_perc = 0.05,
group = "TreeSpecies", struc_zero = FALSE, neg_lb = FALSE,
alpha = 0.05, n_cl = 2, verbose = TRUE,
global = TRUE, pairwise = FALSE,
dunnet = FALSE, trend = FALSE,
iter_control = list(tol = 1e-5, max_iter = 20,
verbose = FALSE),
em_control = list(tol = 1e-5, max_iter = 100),
lme_control = NULL,
mdfdr_control = list(fwer_ctrl_method = "fdr", B = 100),
trend_control = NULL)
knitr::opts_chunk$set(echo = TRUE)
Metadata_16S_pooled=
Metadata_16S %>%
distinct(TreeSampleType, .keep_all = TRUE)
library(tidyverse)
library(vegan)
library(car)
library(magrittr)
library(ecodist)
library(ANCOMBC)
library(phyloseq)
Metadata_16S_pooled=
Metadata_16S %>%
distinct(TreeSampleType, .keep_all = TRUE)
View(Metadata_16S_pooled)
knitr::opts_chunk$set(echo = TRUE)
Metadata_16S_pooled=
Metadata_16S %>%
distinct(TreeSampleType, .keep_all = TRUE)
Metadata_16S_pooled=
Metadata_16S %>%
distinct(TreeSampleType, .keep_all = TRUE)
AlphaDiv_pooled_16S=
data.frame(Shannon=diversity(OtuMat16S_rare_pooled, index="shannon"),
Simpson=diversity(OtuMat16S_rare_pooled, index="simpson"),
Invsimpson=diversity(OtuMat16S_rare_pooled, index="invsimpson"),
Richness=specnumber(OtuMat16S_rare_pooled)) %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_16S_pooled)
View(AlphaDiv_pooled_16S)
AlphaDiv_pooled_16S=
data.frame(Shannon=diversity(OtuMat16S_rare_pooled, index="shannon"),
Simpson=diversity(OtuMat16S_rare_pooled, index="simpson"),
Invsimpson=diversity(OtuMat16S_rare_pooled, index="invsimpson"),
Richness=specnumber(OtuMat16S_rare_pooled)) %>%
mutate(TreeSampleType=rownames(.)) %>%
left_join(Metadata_16S_pooled)
View(guild_richness_16S_pool_final)
# read in taxonomy appended with guilds
TaxGuild <- read.csv("../Aus23_16S_Metabarcoding/Taxonomy/Aus23_16S_SilvaTaxonomy_FunctionalGuilds.csv", row.names=1)[c(6,21)]
############# UN-POOLED DATA ########################
# Calculate relative abundances of copiotrophs and oligotrophs
guild_summary_16S=
OtuMat16S_rel %>%
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_rel_abund",
Copio_oligo=="Copiotroph" ~ "Copiotroph_rel_abund",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_summary_16S[3,1] <- "OtherBacteria_rel_abund"
guild_summary_16S_final <- guild_summary_16S[,c(2:ncol(guild_summary_16S))]
rownames(guild_summary_16S_final) <- guild_summary_16S$guild_edited
guild_summary_16S_final <- as.data.frame(t(guild_summary_16S_final))
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S=
OtuMat16S_rare %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_richness_16S[3,1] <- "OtherBacteria_richness"
guild_richness_16S_final <- guild_richness_16S[,c(2:ncol(guild_richness_16S))]
rownames(guild_richness_16S_final) <- guild_richness_16S$guild_edited
guild_richness_16S_final <- as.data.frame(t(guild_richness_16S_final))
############# POOLED DATA ########################
# Calculate relative abundances of copiotrophs and oligotrophs
guild_summary_16S_pool=
OtuMat16S_pooled_rel %>%
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_rel_abund",
Copio_oligo=="Copiotroph" ~ "Copiotroph_rel_abund",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_summary_16S_pool[3,1] <- "OtherBacteria_rel_abund"
guild_summary_16S_pool_final <- guild_summary_16S_pool[,c(2:ncol(guild_summary_16S_pool))]
rownames(guild_summary_16S_pool_final) <- guild_summary_16S_pool$guild_edited
guild_summary_16S_pool_final <- as.data.frame(t(guild_summary_16S_pool_final))
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S_pool=
OtuMat16S_rare_pooled %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_richness_16S_pool[3,1] <- "OtherBacteria_richness"
guild_richness_16S_pool_final <- guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))]
rownames(guild_richness_16S_pool_final) <- guild_richness_16S_pool$guild_edited
guild_richness_16S_pool_final <- as.data.frame(t(guild_richness_16S_pool_final))
vIEW(guild_richness_16S_pool_final)
View(guild_richness_16S_pool_final)
guild_richness_16S_pool_final <-
as.data.frame(t(guild_richness_16S_pool_final)) %>%
mutate(TreeSampleType=rownames(.)) %>%
left_join(AlphaDiv_pooled_16S)
View(guild_richness_16S_pool_final)
guild_richness_16S_pool_final <-
as.data.frame(t(guild_richness_16S_pool_final)) %>% View
guild_richness_16S_pool_final <-
as.data.frame(t(guild_richness_16S_pool_final)) %>%
mutate(TreeSampleType=rownames(.)) %>% View
as.data.frame(t(guild_richness_16S_pool_final)) %>%
mutate(TreeSampleType=rownames(.)) %>% View
guild_richness_16S_pool_final <-
guild_richness_16S_pool_final %>%
t %>%
as.data.frame %>%
mutate(TreeSampleType=rownames(.)) %>% View
guild_richness_16S_pool_final <-
guild_richness_16S_pool_final %>%
t %>%
as.data.frame %>%
mutate(TreeSampleType=row.names(.)) %>% View
guild_richness_16S_pool_final <-
guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))] %>%
set_rownames(.$guild_edited)
rownaView(guild_richness_16S_pool_final)
guild_richness_16S_pool_final <-
guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))] %>%
set_rownames(.$guild_edited)
View(guild_richness_16S_pool_final)
t %>%
as.data.frame %>%
mutate(TreeSampleType=rownames(.)) %>% View
guild_richness_16S_pool_final <-
guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))] %>%
set_rownames(.$guild_edited) %>%
t %>%
as.data.frame %>%
mutate(TreeSampleType=rownames(.)) %>% View
View(guild_summary_16S_pool_final)
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S_pool=
OtuMat16S_rare_pooled %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S_pool=
OtuMat16S_rare_pooled %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_richness_16S_pool[3,1] <- "OtherBacteria_richness"
View(guild_summary_16S_pool_final)
guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))] %>% View
View(guild_summary_16S_pool)
View(guild_richness_16S)
# read in taxonomy appended with guilds
TaxGuild <- read.csv("../Aus23_16S_Metabarcoding/Taxonomy/Aus23_16S_SilvaTaxonomy_FunctionalGuilds.csv", row.names=1)[c(6,21)]
############# UN-POOLED DATA ########################
# Calculate relative abundances of copiotrophs and oligotrophs
guild_summary_16S=
OtuMat16S_rel %>%
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_rel_abund",
Copio_oligo=="Copiotroph" ~ "Copiotroph_rel_abund",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_summary_16S[3,1] <- "OtherBacteria_rel_abund"
guild_summary_16S_final <- guild_summary_16S[,c(2:ncol(guild_summary_16S))]
rownames(guild_summary_16S_final) <- guild_summary_16S$guild_edited
guild_summary_16S_final <- as.data.frame(t(guild_summary_16S_final))
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S=
OtuMat16S_rare %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_richness_16S[3,1] <- "OtherBacteria_richness"
guild_richness_16S_final <- guild_richness_16S[,c(2:ncol(guild_richness_16S))]
rownames(guild_richness_16S_final) <- guild_richness_16S$guild_edited
guild_richness_16S_final <- as.data.frame(t(guild_richness_16S_final))
############# POOLED DATA ########################
# Calculate relative abundances of copiotrophs and oligotrophs
guild_summary_16S_pool=
OtuMat16S_pooled_rel %>%
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_rel_abund",
Copio_oligo=="Copiotroph" ~ "Copiotroph_rel_abund",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_summary_16S_pool[3,1] <- "OtherBacteria_rel_abund"
guild_summary_16S_pool_final <- guild_summary_16S_pool[,c(2:ncol(guild_summary_16S_pool))]
rownames(guild_summary_16S_pool_final) <- guild_summary_16S_pool$guild_edited
guild_summary_16S_pool_final <- as.data.frame(t(guild_summary_16S_pool_final))
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S_pool=
OtuMat16S_rare_pooled %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_richness_16S_pool[3,1] <- "OtherBacteria_richness"
guild_richness_16S_pool_final <- guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))]
rownames(guild_richness_16S_pool_final) <- guild_richness_16S_pool$guild_edited
guild_richness_16S_pool_final <- as.data.frame(t(guild_richness_16S_pool_final))
View(guild_summary_16S_final)
View(guild_richness_16S_final)
AlphaDivGuilds16S=
AlphaDiv_16S %>%
left_join((guild_summary_16S_final %>% mutate(TreeSampleType=rownames(.)))) %>%
left_join((guild_richness_16S_final %>% mutate(TreeSampleType=rownames(.))))
AlphaDivGuilds16S=
AlphaDiv_16S %>%
left_join((guild_summary_16S_final %>% mutate(SampleID=rownames(.)))) %>%
left_join((guild_richness_16S_final %>% mutate(SampleID=rownames(.))))
View(AlphaDiv_16S)
View(AlphaDivGuilds16S)
AlphaDivGuilds16S_pooled=
AlphaDiv_pooled_16S %>%
left_join((guild_summary_16S_pool_final %>% mutate(TreeSampleType=rownames(.)))) %>%
left_join((guild_richness_16S_pool_final %>% mutate(TreeSampleType=rownames(.))))
View(AlphaDivGuilds16S_pooled)
# Alpha diversity + guild data
write.csv(AlphaDivGuilds16S, paste(filepath, "AlphaDivGuilds16S.csv", sep=""))
write.csv(AlphaDivGuilds16S_pooled, paste(filepath, "AlphaDivGuilds16S_pooled.csv", sep=""))
OtuMat16S=
read_tsv("../Aus23_16S_Metabarcoding/Aus23_16S_ASV_table.tsv", skip=1) %>%
column_to_rownames("#OTU ID")
Metadata_16S$TreeSampleType
Metadata_16S=
read_tsv("../Aus23_16S_Metabarcoding/MetabarcodingMetadata.txt") %>%
slice(-1) %>% #remove the comment row
rename("SampleID"=`sample-id`) #rename SampleID column
Metadata_16S_pooled=
Metadata_16S %>%
distinct(TreeSampleType, .keep_all = TRUE)
Metadata_16S=
read_tsv("../Aus23_16S_Metabarcoding/MetabarcodingMetadata.txt") %>%
slice(-1) %>% #remove the comment row
rename("SampleID"=`sample-id`) %>% #rename SampleID column
mutate(TreeSampleType = gsub("-.", "", SampleID)) #generate new column with Tree ID and sample type concatenated
Metadata_16S_pooled=
Metadata_16S %>%
distinct(TreeSampleType, .keep_all = TRUE)
