<<<<<<< HEAD
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)])) %>%
ggplot(aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_minimal()
ANCOM_ITS_pooled_root_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)])) %>%
ggplot(aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test()
ANCOM_ITS_pooled_root_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)])) %>%
ggplot(aes(x=TaxClass, y=lfc_TreeSpeciesPine, group=otu)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test()
ANCOM_ITS_pooled_root_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)])) %>%
ggplot(aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
geom_text(aes(label = TaxClass), hjust = -0.3)
ANCOM_ITS_pooled_root_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)])) %>%
ggplot(aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df$TaxClass)
ANCOM_ITS_pooled_root_df %>%
filter(p_TreeSpeciesPine<0.05) %>% View
ANCOM_ITS_pooled_root_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)])) %>%
ggplot(aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df$TaxClass)
ANCOM_ITS_pooled_root_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)])) %>%
ggplot(aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
theme_test() +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df$TaxClass)
ANCOM_ITS_pooled_root_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)])) %>%
ggplot(aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
scale_x_discrete(labels = .$TaxClass)
ANCOM_ITS_pooled_root_df_plot=
ANCOM_ITS_pooled_root_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)]))
ggplot(ANCOM_ITS_pooled_root_df_plotaes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df_plot$TaxClass)
ggplot(ANCOM_ITS_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df_plot$TaxClass)
ggplot(ANCOM_ITS_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df_plot$TaxClass)
ANCOM_ITS_pooled_soil = ancombc2(data = Phyloseq_pooled_ITS_soil,
fix_formula = "TreeSpecies",
p_adj_method = "fdr", pseudo_sens = TRUE,
prv_cut = 0.10, lib_cut = 1000, s0_perc = 0.05,
group = "TreeSpecies", struc_zero = FALSE, neg_lb = FALSE,
alpha = 0.05, n_cl = 2, verbose = TRUE,
global = TRUE, pairwise = FALSE,
dunnet = FALSE, trend = FALSE,
iter_control = list(tol = 1e-5, max_iter = 20,
verbose = FALSE),
em_control = list(tol = 1e-5, max_iter = 100),
lme_control = lme4::lmerControl(),
mdfdr_control = list(fwer_ctrl_method = "fdr", B = 100),
trend_control = NULL)
Phyloseq_pooled_ITS_soil=subset_samples(Phyloseq_pooled_ITS, SampleType=="Soil")
ANCOM_ITS_pooled_soil = ancombc2(data = Phyloseq_pooled_ITS_soil,
fix_formula = "TreeSpecies",
p_adj_method = "fdr", pseudo_sens = TRUE,
prv_cut = 0.10, lib_cut = 1000, s0_perc = 0.05,
group = "TreeSpecies", struc_zero = FALSE, neg_lb = FALSE,
alpha = 0.05, n_cl = 2, verbose = TRUE,
global = TRUE, pairwise = FALSE,
dunnet = FALSE, trend = FALSE,
iter_control = list(tol = 1e-5, max_iter = 20,
verbose = FALSE),
em_control = list(tol = 1e-5, max_iter = 100),
lme_control = lme4::lmerControl(),
mdfdr_control = list(fwer_ctrl_method = "fdr", B = 100),
trend_control = NULL)
ANCOM_ITS_pooled_soil_df=
ANCOM_ITS_pooled_soil$res %>%
as.data.frame %>%
rename("otu"="taxon") %>%
left_join(TaxMatITS) %>%
mutate(TaxClass=ifelse(!is.na(Species),Species,ifelse(!is.na(Genus),Genus,ifelse(!is.na(Family),Family,ifelse(!is.na(Order),Order,ifelse(!is.na(Class),Class,ifelse(!is.na(Phylum),Phylum,Kingdom)))))))
ANCOM_ITS_pooled_soil_df_plot=
ANCOM_ITS_pooled_soil_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)]))
ggplot(ANCOM_ITS_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df_plot$TaxClass)
ggplot(ANCOM_ITS_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_soil_df_plot$TaxClass)
ggplot(ANCOM_ITS_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_soil_df_plot$TaxClass)
nrow(OtuMat16S_rare_pooled)
#####16S
OTU_16S_pooled_phyloseq=
OtuMat16S_rare_pooled %>%
=======
left_join(TaxMat16S_SILVA)
n_ITS_root=
Linda_ITS_root_df %>%
filter(reject) %>%
nrow
n_ITS_soil=
Linda_ITS_soil_df %>%
filter(reject) %>%
nrow
n_16S_root=
Linda_16S_root_df %>%
filter(reject) %>%
nrow
n_16S_soil=
Linda_16S_soil_df %>%
filter(reject) %>%
nrow
n_ITS_root_no_random=
Linda_ITS_root_no_random_df %>%
filter(reject) %>%
nrow
n_ITS_soil_no_random=
Linda_ITS_soil_no_random_df %>%
filter(reject) %>%
nrow
n_16S_root_no_random=
Linda_16S_root_no_random_df %>%
filter(reject) %>%
nrow
n_16S_soil_no_random=
Linda_16S_soil_no_random_df %>%
filter(reject) %>%
nrow
LINDA_summary=
data.frame(Locus=c("ITS", "ITS", "16S", "16S",
"ITS", "ITS", "16S", "16S"),
SampleType=c("Root","Soil","Root","Soil",
"Root","Soil","Root","Soil"),
ModelType=c("RandomEffect","RandomEffect","RandomEffect","RandomEffect",
"NoRandomEffect","NoRandomEffect","NoRandomEffect","NoRandomEffect"),
n_taxa_significant=c(n_ITS_root, n_ITS_soil, n_16S_root, n_16S_soil,
n_ITS_root_no_random, n_ITS_soil_no_random, n_16S_root_no_random, n_16S_soil_no_random))
LINDA_summary
OTU_ITS_phyloseq=
OtuMatITS %>%
>>>>>>> 3bb6805581edf0caf34c5dc285003d9a29bbd515
as.matrix %>%
otu_table(taxa_are_rows = FALSE)
TAX_16S_pooled_phyloseq=
TaxMat16S_SILVA %>%
filter(otu %in% colnames(OtuMat16S_rare_pooled)) %>%
column_to_rownames("otu") %>%
as.matrix %>%
tax_table
SAMPLES_16S_pooled_phyloseq=
Metadata_ITS_LINDA_pooled %>%
filter(TreeSampleType %in% rownames(OtuMat16S_rare_pooled)) %>%
column_to_rownames("TreeSampleType") %>%
sample_data()
Phyloseq_pooled_ITS <- phyloseq(OTU_16S_pooled_phyloseq, TAX_16S_pooled_phyloseq, SAMPLES_16S_pooled_phyloseq)
Phyloseq_pooled_16S <- phyloseq(OTU_16S_pooled_phyloseq, TAX_16S_pooled_phyloseq, SAMPLES_16S_pooled_phyloseq)
#subset phyloseq object into root and soil samples
Phyloseq_pooled_16S_root=subset_samples(Phyloseq_pooled_16S, SampleType=="Root")
Phyloseq_pooled_16S_soil=subset_samples(Phyloseq_pooled_16S, SampleType=="Soil")
## 16S root ANCOMBC-2 test
```{r, warning=FALSE, message=FALSE}
ANCOM_16S_pooled_root = ancombc2(data = Phyloseq_pooled_16S_root,
fix_formula = "TreeSpecies",
p_adj_method = "fdr", pseudo_sens = TRUE,
prv_cut = 0.10, lib_cut = 1000, s0_perc = 0.05,
group = "TreeSpecies", struc_zero = FALSE, neg_lb = FALSE,
alpha = 0.05, n_cl = 2, verbose = TRUE,
global = TRUE, pairwise = FALSE,
dunnet = FALSE, trend = FALSE,
iter_control = list(tol = 1e-5, max_iter = 20,
verbose = FALSE),
em_control = list(tol = 1e-5, max_iter = 100),
lme_control = lme4::lmerControl(),
mdfdr_control = list(fwer_ctrl_method = "fdr", B = 100),
trend_control = NULL)
ANCOM_16S_pooled_root_df=
ANCOM_16S_pooled_root$res %>%
as.data.frame %>%
rename("otu"="taxon") %>%
left_join(TaxMat16S) %>%
mutate(TaxClass=ifelse(!is.na(Species),Species,ifelse(!is.na(Genus),Genus,ifelse(!is.na(Family),Family,ifelse(!is.na(Order),Order,ifelse(!is.na(Class),Class,ifelse(!is.na(Phylum),Phylum,Kingdom)))))))
ANCOM_16S_pooled_root_df_plot=
ANCOM_16S_pooled_root_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)]))
View(ANCOM_16S_pooled_root_df_plot)
ggplot(ANCOM_16S_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_16S_pooled_root_df_plot$TaxClass)
ggplot(ANCOM_16S_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_16S_pooled_root_df_plot$TaxClass)
ANCOM_16S_pooled_soil = ancombc2(data = Phyloseq_pooled_16S_soil,
fix_formula = "TreeSpecies",
p_adj_method = "fdr", pseudo_sens = TRUE,
prv_cut = 0.10, lib_cut = 1000, s0_perc = 0.05,
group = "TreeSpecies", struc_zero = FALSE, neg_lb = FALSE,
alpha = 0.05, n_cl = 2, verbose = TRUE,
global = TRUE, pairwise = FALSE,
dunnet = FALSE, trend = FALSE,
iter_control = list(tol = 1e-5, max_iter = 20,
verbose = FALSE),
em_control = list(tol = 1e-5, max_iter = 100),
lme_control = lme4::lmerControl(),
mdfdr_control = list(fwer_ctrl_method = "fdr", B = 100),
trend_control = NULL)
ANCOM_16S_pooled_soil_df=
ANCOM_16S_pooled_soil$res %>%
as.data.frame %>%
<<<<<<< HEAD
rename("otu"="taxon") %>%
left_join(TaxMat16S) %>%
mutate(TaxClass=ifelse(!is.na(Species),Species,ifelse(!is.na(Genus),Genus,ifelse(!is.na(Family),Family,ifelse(!is.na(Order),Order,ifelse(!is.na(Class),Class,ifelse(!is.na(Phylum),Phylum,Kingdom)))))))
ANCOM_16S_pooled_soil_df_plot=
ANCOM_16S_pooled_soilt_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)]))
ANCOM_16S_pooled_soil_df_plot=
ANCOM_16S_pooled_soil_df %>%
filter(p_TreeSpeciesPine<0.05) %>%
mutate(HostID=case_when(lfc_TreeSpeciesPine<0 ~ "Eucalyptus",
lfc_TreeSpeciesPine>0 ~ "Pine",
.default=NA),
otu = factor(otu, levels = otu[order(lfc_TreeSpeciesPine)]))
ggplot(ANCOM_16S_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_16S_pooled_root_df_plot$TaxClass)
ggplot(ANCOM_16S_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_16S_pooled_root_df_plot$TaxClass)
ANCOM_16S_pooled_root_df_plot
ANCOM_ITS_pooled_root_df_plot
pwd()
list.files()
list.files(../)
list.files("../")
write.csv(ANCOM_ITS_pooled_root_df_plot, "../ANCOMBC-2/ANCOM_ITS_pooled_root_df_plot.csv")
write.csv(ANCOM_ITS_pooled_soil_df_plot, "../ANCOMBC-2/ANCOM_ITS_pooled_soil_df_plot.csv")
write.csv(ANCOM_16S_pooled_root_df_plot, "../ANCOMBC-2/ANCOM_16S_pooled_root_df_plot.csv")
write.csv(ANCOM_16S_pooled_soil_df_plot, "../ANCOMBC-2/ANCOM_16S_pooled_soil_df_plot.csv")
write.csv(ANCOM_ITS_pooled_root_df_plot, "../ANCOMBC-2/ANCOM_ITS_pooled_root_df_plot.csv", row.names = FALSE)
write.csv(ANCOM_ITS_pooled_root_df_plot, "../ANCOMBC-2/ANCOM_ITS_pooled_root_df_plot.csv", row.names = FALSE)
write.csv(ANCOM_ITS_pooled_soil_df_plot, "../ANCOMBC-2/ANCOM_ITS_pooled_soil_df_plot.csv", row.names = FALSE)
write.csv(ANCOM_16S_pooled_root_df_plot, "../ANCOMBC-2/ANCOM_16S_pooled_root_df_plot.csv", row.names = FALSE)
write.csv(ANCOM_16S_pooled_soil_df_plot, "../ANCOMBC-2/ANCOM_16S_pooled_soil_df_plot.csv", row.names = FALSE)
ANCOM_16S_soil_plot=
ggplot(ANCOM_16S_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_16S_pooled_root_df_plot$TaxClass)
ANCOM_16S_root_plot=
ggplot(ANCOM_16S_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_16S_pooled_root_df_plot$TaxClass)
ANCOM_ITS_soil_plot=
ggplot(ANCOM_ITS_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_soil_df_plot$TaxClass)
ANCOM_ITS_root_plot=
ggplot(ANCOM_ITS_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df_plot$TaxClass)
save.image(ANCOM_ITS_root_plot, "../ANCOMBC-2/ANCOM_ITS_root_plot")
save.image(ANCOM_ITS_root_plot, file="../ANCOMBC-2/ANCOM_ITS_root_plot")
png(ANCOM_ITS_root_plot, file="../ANCOMBC-2/ANCOM_ITS_root_plot")
png(ANCOM_ITS_root_plot, "../ANCOMBC-2/ANCOM_ITS_root_plot")
ANCOM_ITS_root_plot
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png")
ANCOM_ITS_root_plot
ANCOM_ITS_root_plot=
ggplot(ANCOM_ITS_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df_plot$TaxClass) +
ggtitle("Fungi different between roots")
ANCOM_ITS_root_plot
ANCOM_ITS_root_plot=
ggplot(ANCOM_ITS_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df_plot$TaxClass) +
ggtitle("Fungi different between roots") +
theme(plot.title = element_text(hjust = 0.5))
ANCOM_ITS_root_plot
ANCOM_ITS_root_plot=
ggplot(ANCOM_ITS_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df_plot$TaxClass) +
ggtitle("Fungi different between roots") +
theme(plot.title = element_text(hjust = 0.5))
ANCOM_ITS_soil_plot=
ggplot(ANCOM_ITS_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_soil_df_plot$TaxClass) +
ggtitle("Fungi different between soil") +
theme(plot.title = element_text(hjust = 0.5))
ANCOM_ITS_soil_plot=
ggplot(ANCOM_ITS_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_soil_df_plot$TaxClass) +
ggtitle("Fungi different in soil") +
theme(plot.title = element_text(hjust = 0.5))
ANCOM_ITS_root_plot=
ggplot(ANCOM_ITS_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_ITS_pooled_root_df_plot$TaxClass) +
ggtitle("Fungi different in roots") +
theme(plot.title = element_text(hjust = 0.5))
ANCOM_16S_root_plot=
ggplot(ANCOM_16S_pooled_root_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_16S_pooled_root_df_plot$TaxClass) +
ggtitle("Bacteria different in roots") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png")
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png")
ANCOM_ITS_soil_plot
ggsave("../ANCOMBC-2/ANCOM_ITS_soil_plot.png")
ANCOM_16S_root_plot
ggsave("../ANCOMBC-2/ANCOM_16S_root_plot.png")
ggsave("../ANCOMBC-2/ANCOM_16S_root_plot.png")
ANCOM_16S_soil_plot
ANCOM_16S_soil_plot
ggsave("../ANCOMBC-2/ANCOM_16S_soil_plot.png")
ANCOM_16S_soil_plot=
ggplot(ANCOM_16S_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_16S_pooled_root_df_plot$TaxClass) +
ggtitle("Bacteria different in soil") +
theme(plot.title = element_text(hjust = 0.5))
ANCOM_16S_soil_plot
ANCOM_16S_soil_plot
ggsave("../ANCOMBC-2/ANCOM_16S_soil_plot.png")
ANCOM_ITS_root_plot
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png")
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png")
ANCOM_ITS_soil_plot
ggsave("../ANCOMBC-2/ANCOM_ITS_soil_plot.png")
ANCOM_16S_root_plot
ANCOM_16S_root_plot
ggsave("../ANCOMBC-2/ANCOM_16S_root_plot.png")
ANCOM_16S_soil_plot
ANCOM_16S_soil_plot
ggsave("../ANCOMBC-2/ANCOM_16S_soil_plot.png")
ANCOM_16S_soil_plot=
ggplot(ANCOM_16S_pooled_soil_df_plot, aes(x=otu, y=lfc_TreeSpeciesPine)) +
geom_bar(stat="identity", aes(fill=HostID)) +
geom_hline(yintercept=0, color="black") +
coord_flip() +
theme_test() +
ylab("Log2FoldChange") +
scale_x_discrete(labels = ANCOM_16S_pooled_soil_df_plot$TaxClass) +
ggtitle("Bacteria different in soil") +
theme(plot.title = element_text(hjust = 0.5))
ANCOM_ITS_root_plot
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png")
ANCOM_ITS_soil_plot
ggsave("../ANCOMBC-2/ANCOM_ITS_soil_plot.png")
ANCOM_16S_root_plot
ggsave("../ANCOMBC-2/ANCOM_16S_root_plot.png")
ANCOM_16S_soil_plot
ggsave("../ANCOMBC-2/ANCOM_16S_soil_plot.png")
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png", width=200, height=500)
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png", width=5, height=7)
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png", width=8, height=7)
ANCOM_ITS_root_plot
ANCOM_ITS_root_plot
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png", width=8, height=7)
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png", width=8, height=5)
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png", width=6, height=4)
ANCOM_ITS_soil_plot
ggsave("../ANCOMBC-2/ANCOM_ITS_soil_plot.png", width=6, height=6)
ANCOM_16S_root_plot
ANCOM_16S_root_plot
ANCOM_16S_root_plot
ggsave("../ANCOMBC-2/ANCOM_16S_root_plot.png", width=6, height=7)
ANCOM_16S_root_plot
ANCOM_16S_root_plot
ggsave("../ANCOMBC-2/ANCOM_16S_root_plot.png", width=6, height=9)
ggsave("../ANCOMBC-2/ANCOM_16S_root_plot.png", width=6, height=10)
ANCOM_16S_soil_plot
ANCOM_16S_soil_plot
ANCOM_16S_soil_plot
ggsave("../ANCOMBC-2/ANCOM_16S_soil_plot.png", width=6, height=8)
ANCOM_16S_soil_plot
ANCOM_16S_soil_plot
ggsave("../ANCOMBC-2/ANCOM_16S_soil_plot.png", width=6, height=9)
ANCOM_16S_soil_plot
ANCOM_16S_soil_plot
ggsave("../ANCOMBC-2/ANCOM_16S_soil_plot.png", width=6, height=10)
ANCOM_ITS_root_plot
ggsave("../ANCOMBC-2/ANCOM_ITS_root_plot.png", width=6, height=4)
ANCOM_ITS_soil_plot
ggsave("../ANCOMBC-2/ANCOM_ITS_soil_plot.png", width=6, height=6)
ANCOM_16S_root_plot
ggsave("../ANCOMBC-2/ANCOM_16S_root_plot.png", width=6, height=10)
ANCOM_16S_soil_plot
ggsave("../ANCOMBC-2/ANCOM_16S_soil_plot.png", width=6, height=10)
View(ANCOM_ITS_pooled_root_df)
nrow(ANCOM_ITS_pooled_root_df)
View(ANCOM_ITS_pooled_root_df)
=======
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_rel_abund",
Copio_oligo=="Copiotroph" ~ "Copiotroph_rel_abund",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_summary_16S[3,1] <- "OtherBacteria_rel_abund"
guild_summary_16S_final <- guild_summary_16S[,c(2:ncol(guild_summary_16S))]
rownames(guild_summary_16S_final) <- guild_summary_16S$guild_edited
guild_summary_16S_final <- as.data.frame(t(guild_summary_16S_final))
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S=
OtuMat16S_rare %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_richness_16S[3,1] <- "OtherBacteria_richness"
guild_richness_16S_final <- guild_richness_16S[,c(2:ncol(guild_richness_16S))]
rownames(guild_richness_16S_final) <- guild_richness_16S$guild_edited
guild_richness_16S_final <- as.data.frame(t(guild_richness_16S_final))
############# POOLED DATA ########################
# Calculate relative abundances of copiotrophs and oligotrophs
guild_summary_16S_pool=
OtuMat16S_pooled_rel %>%
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_rel_abund",
Copio_oligo=="Copiotroph" ~ "Copiotroph_rel_abund",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_summary_16S_pool[3,1] <- "OtherBacteria_rel_abund"
guild_summary_16S_pool_final <- guild_summary_16S_pool[,c(2:ncol(guild_summary_16S_pool))]
rownames(guild_summary_16S_pool_final) <- guild_summary_16S_pool$guild_edited
guild_summary_16S_pool_final <- as.data.frame(t(guild_summary_16S_pool_final))
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S_pool=
OtuMat16S_rare_pooled %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_richness_16S_pool[3,1] <- "OtherBacteria_richness"
guild_richness_16S_pool_final <- guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))]
rownames(guild_richness_16S_pool_final) <- guild_richness_16S_pool$guild_edited
guild_richness_16S_pool_final <- as.data.frame(t(guild_richness_16S_pool_final))
vIEW(guild_richness_16S_pool_final)
View(guild_richness_16S_pool_final)
guild_richness_16S_pool_final <-
as.data.frame(t(guild_richness_16S_pool_final)) %>%
mutate(TreeSampleType=rownames(.)) %>%
left_join(AlphaDiv_pooled_16S)
View(guild_richness_16S_pool_final)
guild_richness_16S_pool_final <-
as.data.frame(t(guild_richness_16S_pool_final)) %>% View
guild_richness_16S_pool_final <-
as.data.frame(t(guild_richness_16S_pool_final)) %>%
mutate(TreeSampleType=rownames(.)) %>% View
as.data.frame(t(guild_richness_16S_pool_final)) %>%
mutate(TreeSampleType=rownames(.)) %>% View
guild_richness_16S_pool_final <-
guild_richness_16S_pool_final %>%
t %>%
as.data.frame %>%
mutate(TreeSampleType=rownames(.)) %>% View
guild_richness_16S_pool_final <-
guild_richness_16S_pool_final %>%
t %>%
as.data.frame %>%
mutate(TreeSampleType=row.names(.)) %>% View
guild_richness_16S_pool_final <-
guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))] %>%
set_rownames(.$guild_edited)
rownaView(guild_richness_16S_pool_final)
guild_richness_16S_pool_final <-
guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))] %>%
set_rownames(.$guild_edited)
View(guild_richness_16S_pool_final)
t %>%
as.data.frame %>%
mutate(TreeSampleType=rownames(.)) %>% View
guild_richness_16S_pool_final <-
guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))] %>%
set_rownames(.$guild_edited) %>%
t %>%
as.data.frame %>%
mutate(TreeSampleType=rownames(.)) %>% View
View(guild_summary_16S_pool_final)
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S_pool=
OtuMat16S_rare_pooled %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S_pool=
OtuMat16S_rare_pooled %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_richness_16S_pool[3,1] <- "OtherBacteria_richness"
View(guild_summary_16S_pool_final)
guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))] %>% View
View(guild_summary_16S_pool)
View(guild_richness_16S)
# read in taxonomy appended with guilds
TaxGuild <- read.csv("../Aus23_16S_Metabarcoding/Taxonomy/Aus23_16S_SilvaTaxonomy_FunctionalGuilds.csv", row.names=1)[c(6,21)]
############# UN-POOLED DATA ########################
# Calculate relative abundances of copiotrophs and oligotrophs
guild_summary_16S=
OtuMat16S_rel %>%
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_rel_abund",
Copio_oligo=="Copiotroph" ~ "Copiotroph_rel_abund",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_summary_16S[3,1] <- "OtherBacteria_rel_abund"
guild_summary_16S_final <- guild_summary_16S[,c(2:ncol(guild_summary_16S))]
rownames(guild_summary_16S_final) <- guild_summary_16S$guild_edited
guild_summary_16S_final <- as.data.frame(t(guild_summary_16S_final))
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S=
OtuMat16S_rare %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_richness_16S[3,1] <- "OtherBacteria_richness"
guild_richness_16S_final <- guild_richness_16S[,c(2:ncol(guild_richness_16S))]
rownames(guild_richness_16S_final) <- guild_richness_16S$guild_edited
guild_richness_16S_final <- as.data.frame(t(guild_richness_16S_final))
############# POOLED DATA ########################
# Calculate relative abundances of copiotrophs and oligotrophs
guild_summary_16S_pool=
OtuMat16S_pooled_rel %>%
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_rel_abund",
Copio_oligo=="Copiotroph" ~ "Copiotroph_rel_abund",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_summary_16S_pool[3,1] <- "OtherBacteria_rel_abund"
guild_summary_16S_pool_final <- guild_summary_16S_pool[,c(2:ncol(guild_summary_16S_pool))]
rownames(guild_summary_16S_pool_final) <- guild_summary_16S_pool$guild_edited
guild_summary_16S_pool_final <- as.data.frame(t(guild_summary_16S_pool_final))
# Calculate richness of copiotrophs and oligotrophs
guild_richness_16S_pool=
OtuMat16S_rare_pooled %>%
mutate_all(~ ifelse(. > 0, 1, .)) %>% #converts dataframe to presence/absense. Present=1, Absent=0
t %>%
as.data.frame %>%
mutate(otu=rownames(.)) %>%
left_join(TaxGuild, by="otu") %>%
mutate(guild_edited=
case_when(
Copio_oligo=="Oligotroph" ~ "Oligotroph_richness",
Copio_oligo=="Copiotroph" ~ "Copiotroph_richness",
)) %>%
select(-Copio_oligo, -otu) %>%
group_by(guild_edited) %>%
summarise(across(everything(), sum, na.rm = TRUE))
guild_richness_16S_pool[3,1] <- "OtherBacteria_richness"
guild_richness_16S_pool_final <- guild_richness_16S_pool[,c(2:ncol(guild_richness_16S_pool))]
rownames(guild_richness_16S_pool_final) <- guild_richness_16S_pool$guild_edited
guild_richness_16S_pool_final <- as.data.frame(t(guild_richness_16S_pool_final))
View(guild_summary_16S_final)
View(guild_richness_16S_final)
AlphaDivGuilds16S=
AlphaDiv_16S %>%
left_join((guild_summary_16S_final %>% mutate(TreeSampleType=rownames(.)))) %>%
left_join((guild_richness_16S_final %>% mutate(TreeSampleType=rownames(.))))
AlphaDivGuilds16S=
AlphaDiv_16S %>%
left_join((guild_summary_16S_final %>% mutate(SampleID=rownames(.)))) %>%
left_join((guild_richness_16S_final %>% mutate(SampleID=rownames(.))))
View(AlphaDiv_16S)
View(AlphaDivGuilds16S)
AlphaDivGuilds16S_pooled=
AlphaDiv_pooled_16S %>%
left_join((guild_summary_16S_pool_final %>% mutate(TreeSampleType=rownames(.)))) %>%
left_join((guild_richness_16S_pool_final %>% mutate(TreeSampleType=rownames(.))))
View(AlphaDivGuilds16S_pooled)
# Alpha diversity + guild data
write.csv(AlphaDivGuilds16S, paste(filepath, "AlphaDivGuilds16S.csv", sep=""))
write.csv(AlphaDivGuilds16S_pooled, paste(filepath, "AlphaDivGuilds16S_pooled.csv", sep=""))
OtuMat16S=
read_tsv("../Aus23_16S_Metabarcoding/Aus23_16S_ASV_table.tsv", skip=1) %>%
column_to_rownames("#OTU ID")
Metadata_16S$TreeSampleType
Metadata_16S=
read_tsv("../Aus23_16S_Metabarcoding/MetabarcodingMetadata.txt") %>%
slice(-1) %>% #remove the comment row
rename("SampleID"=`sample-id`) #rename SampleID column
Metadata_16S_pooled=
Metadata_16S %>%
distinct(TreeSampleType, .keep_all = TRUE)
Metadata_16S=
read_tsv("../Aus23_16S_Metabarcoding/MetabarcodingMetadata.txt") %>%
slice(-1) %>% #remove the comment row
rename("SampleID"=`sample-id`) %>% #rename SampleID column
mutate(TreeSampleType = gsub("-.", "", SampleID)) #generate new column with Tree ID and sample type concatenated
Metadata_16S_pooled=
Metadata_16S %>%
distinct(TreeSampleType, .keep_all = TRUE)
dev.off()
setwd("/Users/alex/Documents/Documents - Alex’s MacBook Pro/Documents/GitHub/Aus-Invasions-2023-Course")
library(tidyverse)
library(vegan)
library(dplyr)
#Includes all root & soil samples
AMF = read.csv("Aus23_18S_Metabarcoding/OTUTables/Aitchison_pooled_18S.csv")
Bac = read.csv("Aus23_16S_Metabarcoding/OTUTables/Aitchison_pooled_rel_16S.csv")
knitr::opts_knit$set(root.dir = "/Users/alex/Documents/Documents - Alex’s MacBook Pro/Documents/GitHub/Aus-Invasions-2023-Course")
#Includes all root & soil samples
AMF = read.csv("Aus23_18S_Metabarcoding/OTUTables/Aitchison_pooled_18S.csv")
Bac = read.csv("Aus23_16S_Metabarcoding/OTUTables/Aitchison_pooled_rel_16S.csv")
Fung = read.csv("Aus23_ITS_Metabarcoding/OTUTables/Aitchison_pooled_ITS.csv")
#Includes all root & soil samples
AMF = read.csv("Aus23_18S_Metabarcoding/OTUTables/Aitchison_pooled_18S.csv")
Bac = read.csv("Aus23_16S_Metabarcoding/OTUTables/Aitchison_pooled_rel_16S.csv")
Fung = read.csv("Aus23_ITS_Metabarcoding/OTUTables/Aitchison_pooled_ITS.csv")
#Removing negative controls
Bac = Bac[-19,]
Fung = Fung[-19,]
#Includes all root & soil samples
AMF = read.csv("Aus23_18S_Metabarcoding/OTUTables/Aitchison_pooled_18S.csv")
Bac = read.csv("Aus23_16S_Metabarcoding/OTUTables/Aitchison_pooled_rel_16S.csv")
Fung = read.csv("Aus23_ITS_Metabarcoding/OTUTables/Aitchison_pooled_ITS.csv")
View(AMF)
View(Bac)
View(Fung)
#Removing negative controls
Bac = Bac[-19,-20]
Fung = Fung[-19,-20]
#Read in metadata
Meta = read.csv("Merged_data/Aus23_master_pooled.csv")
#Removing root samples from each df
Bac = Bac[-c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35),]
Bac = Bac[,-c(2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36)]
Fung = Fung[-c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35),]
Fung = Fung[,-c(2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36)]
AMF = AMF[-c(1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35),]
View(Meta)
library(readxl)
#Read in metadata
Meta = read_excel("/Users/alex/Documents/Documents - Alex’s MacBook Pro/Documents/GitHub/Aus-Invasions-2023-Course/Aus23_allData_11Nov24.csv.xlsx")
View(Meta)
#Begin dbRDA
x = Bac
x_meta = Meta
View(x_meta)
bac_dbrda = vegan::dbrda(x~ TreeSpecies + perc_N + perc_C + CN_ratio + ergosterol + tot_P + perc_P + soil_moisture + organic_matter_LOI + dbh_cm + height_m + litter_depth + pine_litter_prop + euc_litter_prop + total_litter_biomass, data=x_meta, distance="bray")
bac_dbrda = vegan::dbrda(x~ tree_spp + perc_N + perc_C + CN_ratio + ergosterol + tot_P + perc_P + soil_moisture + organic_matter_LOI + dbh_cm + height_m + litter_depth + pine_litter_prop + euc_litter_prop + total_litter_biomass, data=x_meta, distance="bray")
bac_dbrda = vegan::dbrda(x~ perc_N + perc_C + CN_ratio + ergosterol + tot_P + perc_P + soil_moisture + organic_matter_LOI + dbh_cm + height_m + litter_depth + pine_litter_prop + euc_litter_prop + total_litter_biomass, data=x_meta, distance="bray")
#Begin dbRDA
as.numeric(x_meta[,c(7:207)])
#Begin dbRDA
x_meta = as.numeric(x_meta[,c(7:207)])
bac_dbrda = vegan::dbrda(x~ perc_N + perc_C + CN_ratio + ergosterol + tot_P + perc_P + soil_moisture + organic_matter_LOI + dbh_cm + height_m + litter_depth + pine_litter_prop + euc_litter_prop + total_litter_biomass, data=x_meta, distance="bray")
View(x)
#Begin dbRDA
#Change first column to rownames
Bac %>% remove_rownames %>% column_to_rownames(var="X")
#Begin dbRDA
#Change first column to rownames
Bac = Bac %>% remove_rownames %>% column_to_rownames(var="X")
x = Bac
bac_dbrda = vegan::dbrda(x~ perc_N + perc_C + CN_ratio + ergosterol + tot_P + perc_P + soil_moisture + organic_matter_LOI + dbh_cm + height_m + litter_depth + pine_litter_prop + euc_litter_prop + total_litter_biomass, data=x_meta, distance="bray")
print(bac_dbrda)
summary(bac_dbrda)
plot(bac_dbrda)
bac_dbrda = vegan::dbrda(x~ perc_N + perc_C + CN_ratio + ergosterol + tot_P + perc_P + soil_moisture + organic_matter_LOI + dbh_cm + height_m + litter_depth + pine_litter_prop + euc_litter_prop + total_litter_biomass, data=x_meta)
print(bac_dbrda)
summary(bac_dbrda)
plot(bac_dbrda)
plot(bac_dbrda)
#Change first column to rownames
Fung = Fung %>% remove_rownames %>% column_to_rownames(var="X")
fung_dbrda = vegan::dbrda(x~ perc_N + perc_C + CN_ratio + ergosterol + tot_P + perc_P + soil_moisture + organic_matter_LOI + dbh_cm + height_m + litter_depth + pine_litter_prop + euc_litter_prop + total_litter_biomass, data=x_meta)
print(fung_dbrda)
plot(fung_dbrda)
summary(fung_dbrda)
View(x_meta)
x = Fung
fung_dbrda = vegan::dbrda(x~ perc_N + perc_C + CN_ratio + ergosterol + tot_P + perc_P + soil_moisture + organic_matter_LOI + dbh_cm + height_m + litter_depth + pine_litter_prop + euc_litter_prop + total_litter_biomass, data=x_meta)
print(fung_dbrda)
plot(fung_dbrda)
#Change first column to rownames
AMF = AMF %>% remove_rownames %>% column_to_rownames(var="X")
x = AMF
x_meta = Meta
amf_dbrda = vegan::dbrda(x~ perc_N + perc_C + CN_ratio + ergosterol + tot_P + perc_P + soil_moisture + organic_matter_LOI + dbh_cm + height_m + litter_depth + pine_litter_prop + euc_litter_prop + total_litter_biomass, data=x_meta)
print(amf_dbrda)
plot(amf_dbrda)
>>>>>>> 3bb6805581edf0caf34c5dc285003d9a29bbd515
