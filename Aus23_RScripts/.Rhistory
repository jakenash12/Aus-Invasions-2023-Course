set_colnames("n_sequences") %>%
left_join(SeqDepth16S_nonplastid)
#calculates sequencing depth by taking column sums of OTU table
SeqDepth16S_nonplastid=
OtuMat16S_filter %>%
colSums() %>%
as.data.frame %>%
mutate(SampleID=rownames(.)) %>%
set_colnames("n_sequences_nonplastid")
View(SeqDepth16S)
SeqDepth16S=
OtuMat16S %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences") %>%
mutate(SampleID=rownames(.)) %>%
left_join(SeqDepth16S_nonplastid)
#calculates sequencing depth by taking column sums of OTU table
SeqDepth16S_nonplastid=
OtuMat16S_filter %>%
colSums() %>%
as.data.frame %>%
mutate(SampleID=rownames(.)) %>%
set_colnames("n_sequences_nonplastid")
SeqDepth16S=
OtuMat16S %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences") %>%
mutate(SampleID=rownames(.)) %>%
left_join(SeqDepth16S_nonplastid)
#calculates sequencing depth by taking column sums of OTU table
SeqDepth16S_nonplastid=
OtuMat16S_filter %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences_nonplastid")
View(SeqDepth16S_nonplastid)
#calculates sequencing depth by taking column sums of OTU table
SeqDepth16S_nonplastid=
OtuMat16S_filter %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences_nonplastid")
#calculates sequencing depth by taking column sums of OTU table
SeqDepth16S_nonplastid=
OtuMat16S_filter %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences_nonplastid") %>%
mutate(SampleID=rownames(.))
SeqDepth16S=
OtuMat16S %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences") %>%
mutate(SampleID=rownames(.)) %>%
left_join(SeqDepth16S_nonplastid)
SeqDepth16S=
OtuMat16S %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences") %>%
mutate(SampleID=rownames(.)) %>%
left_join(SeqDepth16S_nonplastid) %>%
mutate(SeqDiscard=n_sequences-n_sequences_nonplastid)
SeqDepth16S=
OtuMat16S %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences") %>%
mutate(SampleID=rownames(.)) %>%
left_join(SeqDepth16S_nonplastid) %>%
mutate(SeqDiscard=n_sequences-n_sequences_nonplastid,
PropDiscard=SeqDiscard/n_sequences)
SeqDepth16S=
OtuMat16S %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences") %>%
mutate(SampleID=rownames(.)) %>%
left_join(SeqDepth16S_nonplastid) %>%
mutate(SeqDiscard=n_sequences-n_sequences_nonplastid,
PropDiscard=SeqDiscard/n_sequences)
SeqDepth16S=
OtuMat16S %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences") %>%
mutate(SampleID=rownames(.)) %>%
left_join(SeqDepth16S_nonplastid) %>%
mutate(SeqDiscard=n_sequences-n_sequences_nonplastid,
PercDiscard=100*SeqDiscard/n_sequences)
SeqDepth16S$PercDiscard %>% mean
colnames(Metadata_16S)
SeqDepth16S %>%
left_join(Metadata_16S) %>%
ggplot(aes(x=SampleType, y=PercDiscard, color=TreeSpecies)) +
geom_boxplot()
SeqDepth16S %>%
left_join(Metadata_16S) %>%
ggplot(aes(x=SampleType, y=PercDiscard, color=TreeSpecies)) +
geom_boxplot() +
ggtitle("% of sequences Mitochondrial/Chloroplast")
#uses vegan function to generate rarefaction curve dataframe using a step of 500 seqs
RareCurve_16S=
OtuMat16S_filter %>%
t %>%
rarecurve(step=500, tidy=TRUE)
#sets rarefaction depth to 24,860 seqs, based on seq depth dataframe
rare_depth_16S=24860
#plots rarefaction curve, drawing a vertical line at the rarefaction depth
ggplot(RareCurve_16S, aes(x=Sample, y=Species, group=Site)) +
geom_line() +
geom_vline(xintercept=rare_depth_16S, linetype=2) +
ylab("# ASVs") +
xlab("# Sequences")
set.seed(2023) #make sure to set the random seed so that rarefaction is reproducible
#uses vegan rarefaction function to rarefy to previously defined rarefaction depth
OtuMat16S_rare=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
rrarefy(sample=rare_depth_ITS) %>%
as.data.frame %>%
select(-which(colSums(.) == 0)) %>%
filter(rowSums(.) >= 70218)
#uses vegan rarefaction function to rarefy to previously defined rarefaction depth
OtuMat16S_rare=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
rrarefy(sample=rare_depth_16S) %>%
as.data.frame %>%
select(-which(colSums(.) == 0)) %>%
filter(rowSums(.) >= rare_depth_16S)
nrow(OtuMat16S_rare)
nrow(OtuMat16S_filter)
ncol(OtuMat16S_filter)
#plots rarefaction curve, drawing a vertical line at the rarefaction depth
ggplot(RareCurve_16S, aes(x=Sample, y=Species, group=Site)) +
geom_line() +
geom_vline(xintercept=rare_depth_16S, linetype=2) +
ylab("# ASVs") +
xlab("# Sequences")
OtuMat16S_rare_pooled=
OtuMat16S_rare %>%
mutate(TreeSampleType = gsub("-.", "", rownames(.))) %>% #make a new column with the tree ID and sample type
group_by(TreeSampleType) %>% #group dataframe by tree ID and sample type
summarise(across(everything(), sum, .names = "{.col}")) %>% #sum together sequence counts for all samples that were from the same tree and sample type
column_to_rownames("TreeSampleType") #set rownames to tree ID_sample type
OtuMat16S_rare_pooled_rel=
OtuMat16S_rare_pooled %>%
mutate(across(everything(), ~ . / rowSums(across(everything())))) # do compositional data transform
OtuMat16S_rare_pooled_rel=
OtuMat16S_rare_pooled %>%
mutate(across(everything(), ~ . / rowSums(across(everything())))) # do compositional data transform
dim(OtuMat16S_rare_pooled_rel)
OtuMat16S_rare_rel=
OtuMat16S_rare %>%
mutate(across(everything(), ~ . / rowSums(across(everything())))) # do compositional data transform
OtuMat16S_rel=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
mutate(across(everything(), ~ . / rowSums(across(everything())))) # do compositional data transform
OtuMat16S_rel=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
mutate(across(everything(), ~ . / rowSums(across(everything())))) # do compositional data transform
OtuMat16S_rel=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
sweep(OtuMat16S_rel, 1, rowSums(OtuMat16S_rel), FUN = "/") # do compositional data transform
OtuMat16S_rel=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
sweep(1, rowSums(OtuMat16S_rel), FUN = "/") # do compositional data transform
OtuMat16S_rel=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
sweep(1, rowSums(.), FUN = "/") # do compositional data transform
colnames(OtuMat16S_rel)
rowSums(OtuMat16S_rel)
OtuMat16S_rare_pooled_rel=
OtuMat16S_rare_pooled %>%
sweep(1, rowSums(.), FUN = "/")  # do compositional data transform
OtuMat16S_rare_pooled_rel=
OtuMat16S_rare_pooled %>%
sweep(1, rowSums(.), FUN = "/")  # do compositional data transform
OtuMat16S_rare_rel=
OtuMat16S_rare %>%
sweep(1, rowSums(.), FUN = "/")  # do compositional data transform
OtuMat16S_rare_rel=
OtuMat16S_rare %>%
sweep(1, rowSums(.), FUN = "/")  # do compositional data transform
OtuMat16S_rel=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
sweep(1, rowSums(.), FUN = "/") # do compositional data transform
OtuMat16S_rel=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
sweep(1, rowSums(.), FUN = "/") # do compositional data transform
OtuMat16S_pooled_rel=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
mutate(TreeSampleType = gsub("-.", "", rownames(.))) %>% #make a new column with the tree ID and sample type
group_by(TreeSampleType) %>% #group dataframe by tree ID and sample type
summarise(across(everything(), sum, .names = "{.col}")) %>% #sum together sequence counts for all samples that were from the same tree and sample type
column_to_rownames("TreeSampleType") %>% #set rownames to tree ID_sample type
sweep(1, rowSums(.), FUN = "/")  # do compositional data transform
OtuMatITS_rel=
OtuMatITS %>%
t %>%
as.data.frame %>%
sweep(1, rowSums(.), FUN = "/")
rownames(OtuMatITS_rel)
rowSums(OtuMatITS_rel)
OtuMatITS_rare_pooled=
OtuMatITS_rare %>%
mutate(TreeSampleType = gsub("-.", "", rownames(.))) %>% #make a new column with the tree ID and sample type
group_by(TreeSampleType) %>% #group dataframe by tree ID and sample type
summarise(across(everything(), sum, .names = "{.col}")) %>% #sum together sequence counts for all samples that were from the same tree and sample type
column_to_rownames("TreeSampleType") #set rownames to tree ID_sample type
```{r, warning=FALSE, message=FALSE}
OtuMatITS_rare_pooled=
OtuMatITS_rare %>%
mutate(TreeSampleType = gsub("-.", "", rownames(.))) %>% #make a new column with the tree ID and sample type
group_by(TreeSampleType) %>% #group dataframe by tree ID and sample type
summarise(across(everything(), sum, .names = "{.col}")) %>% #sum together sequence counts for all samples that were from the same tree and sample type
column_to_rownames("TreeSampleType") #set rownames to tree ID_sample type
OtuMatITS_rare_pooled_rel=
OtuMatITS_rare_pooled %>%
sweep(1, rowSums(.), FUN = "/")
OtuMatITS_rare_rel=
OtuMatITS_rare %>%
sweep(1, rowSums(.), FUN = "/")
OtuMatITS_rel=
OtuMatITS %>%
t %>%
as.data.frame %>%
sweep(1, rowSums(.), FUN = "/")
Aitchison_unpooled_ITS=vegdist(OtuMatITS_rel, method = "aitchison", pseudocount=1)
Aitchison_pooled_ITS=vegdist(OtuMatITS_pooled_rel, method = "aitchison", pseudocount=1)
write.csv(OtuMatITS_rel, paste(filepath, "OtuMatITS_rel.csv", sep=""))
write.csv(OtuMatITS_pooled_rel, paste(filepath, "OtuMatITS_pooled_rel.csv", sep=""))
filepath="../Aus23_ITS_Metabarcoding/"
write.csv(OtuMatITS_rare, paste(filepath, "OtuMatITS_rare.csv", sep=""))
write.csv(OtuMatITS_rare_rel, paste(filepath, "OtuMatITS_rare_rel.csv", sep=""))
write.csv(OtuMatITS_rare_pooled, paste(filepath, "OtuMatITS_rare_pooled.csv", sep=""))
write.csv(OtuMatITS_rare_pooled_rel, paste(filepath, "OtuMatITS_rare_pooled_rel.csv", sep=""))
write.csv(OtuMatITS_pooled_rel, paste(filepath, "OtuMatITS_pooled_rel.csv", sep=""))
write.csv(OtuMatITS_rel, paste(filepath, "OtuMatITS_rel.csv", sep=""))
write.csv(as.matrix(Aitchison_unpooled_ITS), paste(filepath, "Aitchison_unpooled_ITS.csv", sep=""))
write.csv(as.matrix(Aitchison_pooled_ITS), paste(filepath, "Aitchison_pooled_ITS.csv", sep=""))
filepath="../Aus23_ITS_Metabarcoding/OTUTables"
write.csv(OtuMatITS_rare, paste(filepath, "OtuMatITS_rare.csv", sep=""))
write.csv(OtuMatITS_rare_rel, paste(filepath, "OtuMatITS_rare_rel.csv", sep=""))
write.csv(OtuMatITS_rare_pooled, paste(filepath, "OtuMatITS_rare_pooled.csv", sep=""))
write.csv(OtuMatITS_rare_pooled_rel, paste(filepath, "OtuMatITS_rare_pooled_rel.csv", sep=""))
write.csv(OtuMatITS_pooled_rel, paste(filepath, "OtuMatITS_pooled_rel.csv", sep=""))
write.csv(OtuMatITS_rel, paste(filepath, "OtuMatITS_rel.csv", sep=""))
write.csv(as.matrix(Aitchison_unpooled_ITS), paste(filepath, "Aitchison_unpooled_ITS.csv", sep=""))
write.csv(as.matrix(Aitchison_pooled_ITS), paste(filepath, "Aitchison_pooled_ITS.csv", sep=""))
library(tidyverse)
library(vegan)
library(magrittr)
library(tibble)
extract_text <- function(x) {
sub(".+__", "", x)
}
TaxMatITS=
read_tsv("../Aus23_ITS_Metabarcoding/ITS2_Dada2_repseqs97_taxonomy.tsv") %>%
rename("otu"="Feature ID") %>%
select(-Confidence) %>%
separate_wider_delim(too_few="align_start", cols = Taxon, delim = ";", names = c("Kingdom", "Phylum","Class", "Order","Family","Genus","Species", "SH")) %>%
mutate(across(!contains("otu"), ~extract_text(.)))
OtuMatITS=
read_tsv("../Aus23_ITS_Metabarcoding/ITS2_OTUTable_97.tsv", skip=1) %>%
column_to_rownames("#OTU ID")
Metadata_ITS=
read_tsv("../Aus23_16S_Metabarcoding/MetabarcodingMetadata.txt") %>%
slice(-1) %>% #remove the comment row
rename("SampleID"=`sample-id`) #rename SampleID column
#calculates sequencing depth by taking column sums of OTU table
SeqDepthITS=
OtuMatITS %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences")
#uses vegan function to generate rarefaction curve dataframe using a step of 500 seqs
RareCurve_ITs=
OtuMatITS %>%
t %>%
rarecurve(step=500, tidy=TRUE)
#sets rarefaction depth to 70,218 seqs, based on seq depth dataframe
rare_depth_ITS=70218
#plots rarefaction curve, drawing a vertical line at the rarefaction depth
ggplot(RareCurve_ITs, aes(x=Sample, y=Species, group=Site)) +
geom_line() +
geom_vline(xintercept=rare_depth_ITS, linetype=2) +
ylab("# ASVs") +
xlab("# Sequences")
set.seed(2023) #make sure to set the random seed so that rarefaction is reproducible
#uses vegan rarefaction function to rarefy to previously defined rarefaction depth
OtuMatITS_rare=
OtuMatITS %>%
t %>%
as.data.frame %>%
rrarefy(sample=rare_depth_ITS) %>%
as.data.frame %>%
select(-which(colSums(.) == 0)) %>%
filter(rowSums(.) >= 70218)
OtuMatITS_rare_pooled=
OtuMatITS_rare %>%
mutate(TreeSampleType = gsub("-.", "", rownames(.))) %>% #make a new column with the tree ID and sample type
group_by(TreeSampleType) %>% #group dataframe by tree ID and sample type
summarise(across(everything(), sum, .names = "{.col}")) %>% #sum together sequence counts for all samples that were from the same tree and sample type
column_to_rownames("TreeSampleType") #set rownames to tree ID_sample type
OtuMatITS_rare_pooled_rel=
OtuMatITS_rare_pooled %>%
sweep(1, rowSums(.), FUN = "/")
OtuMatITS_rare_rel=
OtuMatITS_rare %>%
sweep(1, rowSums(.), FUN = "/")
OtuMatITS_rel=
OtuMatITS %>%
t %>%
as.data.frame %>%
sweep(1, rowSums(.), FUN = "/")
OtuMatITS_pooled_rel=
OtuMatITS %>%
t %>%
as.data.frame %>%
mutate(TreeSampleType = gsub("-.", "", rownames(.))) %>% #make a new column with the tree ID and sample type
group_by(TreeSampleType) %>% #group dataframe by tree ID and sample type
summarise(across(everything(), sum, .names = "{.col}")) %>% #sum together sequence counts for all samples that were from the same tree and sample type
column_to_rownames("TreeSampleType") %>% #set rownames to tree ID_sample type
sweep(1, rowSums(.), FUN = "/")
Aitchison_unpooled_ITS=vegdist(OtuMatITS_rel, method = "aitchison", pseudocount=1)
Aitchison_pooled_ITS=vegdist(OtuMatITS_pooled_rel, method = "aitchison", pseudocount=1)
Aitchison_unpooled_ITS=vegdist(OtuMatITS_rel, method = "aitchison", pseudocount=1)
Aitchison_pooled_ITS=vegdist(OtuMatITS_pooled_rel, method = "aitchison", pseudocount=1)
AlphaDiv_ITS=
data.frame(Shannon=diversity(OtuMatITS_rare, index="shannon"),
Simpson=diversity(OtuMatITS_rare, index="simpson"),
Invsimpson=diversity(OtuMatITS_rare, index="invsimpson"),
Richness=specnumber(OtuMatITS_rare)) %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS)
filepath="../Aus23_ITS_Metabarcoding/OTUTable"
write.csv(OtuMatITS_rare, paste(filepath, "OtuMatITS_rare.csv", sep=""))
write.csv(OtuMatITS_rare_rel, paste(filepath, "OtuMatITS_rare_rel.csv", sep=""))
write.csv(OtuMatITS_rare_pooled, paste(filepath, "OtuMatITS_rare_pooled.csv", sep=""))
write.csv(OtuMatITS_rare_pooled_rel, paste(filepath, "OtuMatITS_rare_pooled_rel.csv", sep=""))
write.csv(OtuMatITS_pooled_rel, paste(filepath, "OtuMatITS_pooled_rel.csv", sep=""))
write.csv(OtuMatITS_rel, paste(filepath, "OtuMatITS_rel.csv", sep=""))
write.csv(as.matrix(Aitchison_unpooled_ITS), paste(filepath, "Aitchison_unpooled_ITS.csv", sep=""))
write.csv(as.matrix(Aitchison_pooled_ITS), paste(filepath, "Aitchison_pooled_ITS.csv", sep=""))
filepath="../Aus23_ITS_Metabarcoding/OTUTable/"
write.csv(OtuMatITS_rare, paste(filepath, "OtuMatITS_rare.csv", sep=""))
filepath="../Aus23_ITS_Metabarcoding/OTUTable/"
write.csv(OtuMatITS_rare, paste(filepath, "OtuMatITS_rare.csv", sep=""))
filepath="../Aus23_ITS_Metabarcoding/OTUTable/"
write.csv(OtuMatITS_rare, paste(filepath, "OtuMatITS_rare.csv", sep=""))
filepath="../Aus23_ITS_Metabarcoding/OTUTable/"
write.csv(OtuMatITS_rare, paste(filepath, "OtuMatITS_rare.csv", sep=""))
dim(OtuMatITS_rare)
filepath="../Aus23_ITS_Metabarcoding/OTUTables/"
write.csv(OtuMatITS_rare, paste(filepath, "OtuMatITS_rare.csv", sep=""))
write.csv(OtuMatITS_rare, paste(filepath, "OtuMatITS_rare.csv", sep=""))
write.csv(OtuMatITS_rare_rel, paste(filepath, "OtuMatITS_rare_rel.csv", sep=""))
write.csv(OtuMatITS_rare_pooled, paste(filepath, "OtuMatITS_rare_pooled.csv", sep=""))
write.csv(OtuMatITS_rare_pooled, paste(filepath, "OtuMatITS_rare_pooled.csv", sep=""))
write.csv(OtuMatITS_rare_pooled_rel, paste(filepath, "OtuMatITS_rare_pooled_rel.csv", sep=""))
write.csv(OtuMatITS_pooled_rel, paste(filepath, "OtuMatITS_pooled_rel.csv", sep=""))
write.csv(OtuMatITS_rel, paste(filepath, "OtuMatITS_rel.csv", sep=""))
write.csv(OtuMatITS_rare_pooled, paste(filepath, "OtuMatITS_rare_pooled.csv", sep=""))
write.csv(OtuMatITS_rare_pooled_rel, paste(filepath, "OtuMatITS_rare_pooled_rel.csv", sep=""))
write.csv(OtuMatITS_pooled_rel, paste(filepath, "OtuMatITS_pooled_rel.csv", sep=""))
write.csv(OtuMatITS_rel, paste(filepath, "OtuMatITS_rel.csv", sep=""))
write.csv(as.matrix(Aitchison_unpooled_ITS), paste(filepath, "Aitchison_unpooled_ITS.csv", sep=""))
write.csv(as.matrix(Aitchison_pooled_ITS), paste(filepath, "Aitchison_pooled_ITS.csv", sep=""))
AlphaDiv_pooled_ITS=
data.frame(Shannon=diversity(OtuMatITS_rare_pooled, index="shannon"),
Simpson=diversity(OtuMatITS_rare_pooled, index="simpson"),
Invsimpson=diversity(OtuMatITS_rare_pooled, index="invsimpson"),
Richness=specnumber(OtuMatITS_rare_pooled)) %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS)
AlphaDiv_ITS=
data.frame(Shannon=diversity(OtuMatITS_rare, index="shannon"),
Simpson=diversity(OtuMatITS_rare, index="simpson"),
Invsimpson=diversity(OtuMatITS_rare, index="invsimpson"),
Richness=specnumber(OtuMatITS_rare)) %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_ITS)
View(SeqDepth16S)
#calculates sequencing depth by taking column sums of OTU table
SeqDepth16S_nonplastid=
OtuMat16S_filter %>%
colSums() %>%
as.data.frame %>%
set_colnames("n_sequences_nonplastid") %>%
mutate(SampleID=rownames(.))
SeqDepth16S %>%
left_join(Metadata_16S) %>%
ggplot(aes(x=SampleType, y=PercDiscard, color=TreeSpecies)) +
geom_boxplot() +
ggtitle("% of sequences Mitochondrial/Chloroplast")
#uses vegan function to generate rarefaction curve dataframe using a step of 500 seqs
RareCurve_16S=
OtuMat16S_filter %>%
t %>%
rarecurve(step=500, tidy=TRUE)
#uses vegan function to generate rarefaction curve dataframe using a step of 500 seqs
RareCurve_16S=
OtuMat16S_filter %>%
t %>%
rarecurve(step=500, tidy=TRUE)
#sets rarefaction depth to 24,860 seqs, based on seq depth dataframe
rare_depth_16S=24860
#plots rarefaction curve, drawing a vertical line at the rarefaction depth
ggplot(RareCurve_16S, aes(x=Sample, y=Species, group=Site)) +
geom_line() +
geom_vline(xintercept=rare_depth_16S, linetype=2) +
ylab("# ASVs") +
xlab("# Sequences")
set.seed(2023) #make sure to set the random seed so that rarefaction is reproducible
#uses vegan rarefaction function to rarefy to previously defined rarefaction depth
OtuMat16S_rare=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
rrarefy(sample=rare_depth_16S) %>%
as.data.frame %>%
select(-which(colSums(.) == 0)) %>%
filter(rowSums(.) >= rare_depth_16S)
OtuMat16S_rare_pooled=
OtuMat16S_rare %>%
mutate(TreeSampleType = gsub("-.", "", rownames(.))) %>% #make a new column with the tree ID and sample type
group_by(TreeSampleType) %>% #group dataframe by tree ID and sample type
summarise(across(everything(), sum, .names = "{.col}")) %>% #sum together sequence counts for all samples that were from the same tree and sample type
column_to_rownames("TreeSampleType") #set rownames to tree ID_sample type
OtuMat16S_rare_pooled_rel=
OtuMat16S_rare_pooled %>%
sweep(1, rowSums(.), FUN = "/")  # do compositional data transform
OtuMat16S_rare_rel=
OtuMat16S_rare %>%
sweep(1, rowSums(.), FUN = "/")  # do compositional data transform
OtuMat16S_rel=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
sweep(1, rowSums(.), FUN = "/") # do compositional data transform
OtuMat16S_pooled_rel=
OtuMat16S_filter %>%
t %>%
as.data.frame %>%
mutate(TreeSampleType = gsub("-.", "", rownames(.))) %>% #make a new column with the tree ID and sample type
group_by(TreeSampleType) %>% #group dataframe by tree ID and sample type
summarise(across(everything(), sum, .names = "{.col}")) %>% #sum together sequence counts for all samples that were from the same tree and sample type
column_to_rownames("TreeSampleType") %>% #set rownames to tree ID_sample type
sweep(1, rowSums(.), FUN = "/")  # do compositional data transform
Aitchison_unpooled_rel_16S=vegdist(OtuMat16S_rel, method = "aitchison", pseudocount=1)
Aitchison_unpooled_rel_16S=vegdist(OtuMat16S_rel, method = "aitchison", pseudocount=1)
Aitchison_pooled_rel_16S=vegdist(OtuMat16S_pooled_rel, method = "aitchison", pseudocount=1)
AlphaDiv_16S=
data.frame(Shannon=diversity(OtuMat16S_rare, index="shannon"),
Simpson=diversity(OtuMat16S_rare, index="simpson"),
Invsimpson=diversity(OtuMat16S_rare, index="invsimpson"),
Richness=specnumber(OtuMat16S_rare)) %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_16S)
AlphaDiv_pooled_16S=
data.frame(Shannon=diversity(OtuMat16S_rare_pooled, index="shannon"),
Simpson=diversity(OtuMat16S_rare_pooled, index="simpson"),
Invsimpson=diversity(OtuMat16S_rare_pooled, index="invsimpson"),
Richness=specnumber(OtuMat16S_rare_pooled)) %>%
mutate(SampleID=rownames(.)) %>%
left_join(Metadata_16S)
filepath="../Aus23_16S_Metabarcoding/OTUTables/"
write.csv(OtuMat16S_rare, paste(filepath, "OtuMat16S_rare.csv", sep=""))
mkdir
mkdir()
write.csv(OtuMat16S_rare, paste(filepath, "OtuMat16S_rare.csv", sep=""))
write.csv(OtuMat16S_rare, paste(filepath, "OtuMat16S_rare.csv", sep=""))
write.csv(OtuMatITS_rare_rel, paste(filepath, "OtuMatITS_rare_rel.csv", sep=""))
write.csv(OtuMat16S_rare, paste(filepath, "OtuMat16S_rare.csv", sep=""))
write.csv(OtuMat16S_rare, paste(filepath, "OtuMat16S_rare.csv", sep=""))
write.csv(OtuMat16S_rare_rel, paste(filepath, "OtuMat16S_rare_rel.csv", sep=""))
write.csv(OtuMat16S_rare, paste(filepath, "OtuMat16S_rare.csv", sep=""))
write.csv(OtuMat16S_rare_rel, paste(filepath, "OtuMat16S_rare_rel.csv", sep=""))
write.csv(OtuMat16S_rare_pooled, paste(filepath, "OtuMat16S_rare_pooled.csv", sep=""))
write.csv(OtuMat16S_rare_pooled_rel, paste(filepath, "OtuMat16S_rare_pooled_rel.csv", sep=""))
write.csv(OtuMat16S_rare, paste(filepath, "OtuMat16S_rare.csv", sep=""))
write.csv(OtuMat16S_rare, paste(filepath, "OtuMat16S_rare.csv", sep=""))
write.csv(OtuMat16S_rare_rel, paste(filepath, "OtuMat16S_rare_rel.csv", sep=""))
write.csv(OtuMat16S_rare_pooled, paste(filepath, "OtuMat16S_rare_pooled.csv", sep=""))
write.csv(OtuMat16S_rare_pooled_rel, paste(filepath, "OtuMat16S_rare_pooled_rel.csv", sep=""))
write.csv(OtuMat16S_rel, paste(filepath, "OtuMat16S_rel.csv", sep=""))
write.csv(OtuMat16S_pooled_rel, paste(filepath, "OtuMat16S_pooled_rel.csv", sep=""))
write.csv(as.matrix(Aitchison_unpooled_rel_16S), paste(filepath, "Aitchison_unpooled_rel_16S.csv", sep=""))
write.csv(as.matrix(Aitchison_pooled_rel_16S), paste(filepath, "Aitchison_pooled_rel_16S.csv", sep=""))
